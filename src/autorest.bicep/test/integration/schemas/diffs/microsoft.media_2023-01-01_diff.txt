 {
   resourceDefinitions: {
     mediaservices: {
       required: [
         ...
-        "location"
         ...
         ...
         ...
       ]
     }
   }
   definitions: {
-    AudioTrack: {
-      type: "object"
-      properties: {
-        @odata.type: {
-          type: "string"
-          enum: [
-            "#Microsoft.Media.AudioTrack"
-          ]
-        }
-        dashSettings: {
-          oneOf: [
-            {
-              $ref: "#/definitions/DashSettings"
-            }
-            {
-              $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
-            }
-          ]
-          description: "The DASH setting for a track."
-        }
-        displayName: {
-          type: "string"
-          description: "The display name of the audio track on a video player. In HLS, this maps to the NAME attribute of EXT-X-MEDIA."
-        }
-        fileName: {
-          type: "string"
-          description: "The file name to the source file. This file is located in the storage container of the asset."
-        }
-        hlsSettings: {
-          oneOf: [
-            {
-              $ref: "#/definitions/HlsSettings"
-            }
-            {
-              $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
-            }
-          ]
-          description: "The HLS setting for a track."
-        }
-        languageCode: {
-          type: "string"
-          description: "The RFC5646 language code for the audio track."
-        }
-        mpeg4TrackId: {
-          oneOf: [
-            {
-              type: "integer"
-            }
-            {
-              $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
-            }
-          ]
-          description: "The MPEG-4 audio track ID for the audio track."
-        }
-      }
-      required: [
-        "@odata.type"
-      ]
-      description: "Represents an audio track in the asset."
-    }
-    ContentKeyPolicyClearKeyConfiguration: {
-      type: "object"
-      properties: {
-        @odata.type: {
-          type: "string"
-          enum: [
-            "#Microsoft.Media.ContentKeyPolicyClearKeyConfiguration"
-          ]
-        }
-      }
-      required: [
-        "@odata.type"
-      ]
-      description: "Represents a configuration for non-DRM keys."
-    }
-    ContentKeyPolicyFairPlayConfiguration: {
-      type: "object"
-      properties: {
-        @odata.type: {
-          type: "string"
-          enum: [
-            "#Microsoft.Media.ContentKeyPolicyFairPlayConfiguration"
-          ]
-        }
-        ask: {
-          oneOf: [
-            {
-              type: "string"
-              pattern: "^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"
-            }
-            {
-              $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
-            }
-          ]
-          description: "The key that must be used as FairPlay Application Secret key. This needs to be base64 encoded."
-        }
-        fairPlayPfx: {
-          type: "string"
-          description: "The Base64 representation of FairPlay certificate in PKCS 12 (pfx) format (including private key)."
-        }
-        fairPlayPfxPassword: {
-          type: "string"
-          description: "The password encrypting FairPlay certificate in PKCS 12 (pfx) format."
-        }
-        offlineRentalConfiguration: {
-          oneOf: [
-            {
-              $ref: "#/definitions/ContentKeyPolicyFairPlayOfflineRentalConfiguration"
-            }
-            {
-              $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
-            }
-          ]
-        }
-        rentalAndLeaseKeyType: {
-          oneOf: [
-            {
-              type: "string"
-              enum: [
-                "Unknown"
-                "Undefined"
-                "DualExpiry"
-                "PersistentUnlimited"
-                "PersistentLimited"
-              ]
-            }
-            {
-              $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
-            }
-          ]
-          description: "The rental and lease key type."
-        }
-        rentalDuration: {
-          oneOf: [
-            {
-              type: "integer"
-            }
-            {
-              $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
-            }
-          ]
-          description: "The rental duration. Must be greater than or equal to 0."
-        }
-      }
-      required: [
-        "@odata.type"
-        "ask"
-        "fairPlayPfx"
-        "fairPlayPfxPassword"
-        "rentalAndLeaseKeyType"
-        "rentalDuration"
-      ]
-      description: "Specifies a configuration for FairPlay licenses."
-    }
-    ContentKeyPolicyOpenRestriction: {
-      type: "object"
-      properties: {
-        @odata.type: {
-          type: "string"
-          enum: [
-            "#Microsoft.Media.ContentKeyPolicyOpenRestriction"
-          ]
-        }
-      }
-      required: [
-        "@odata.type"
-      ]
-      description: "Represents an open restriction. License or key will be delivered on every request."
-    }
-    ContentKeyPolicyPlayReadyConfiguration: {
-      type: "object"
-      properties: {
-        @odata.type: {
-          type: "string"
-          enum: [
-            "#Microsoft.Media.ContentKeyPolicyPlayReadyConfiguration"
-          ]
-        }
-        licenses: {
-          oneOf: [
-            {
-              type: "array"
-              items: {
-                $ref: "#/definitions/ContentKeyPolicyPlayReadyLicense"
-              }
-            }
-            {
-              $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
-            }
-          ]
-          description: "The PlayReady licenses."
-        }
-        responseCustomData: {
-          type: "string"
-          description: "The custom response data."
-        }
-      }
-      required: [
-        "@odata.type"
-        "licenses"
-      ]
-      description: "Specifies a configuration for PlayReady licenses."
-    }
-    ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader: {
-      type: "object"
-      properties: {
-        @odata.type: {
-          type: "string"
-          enum: [
-            "#Microsoft.Media.ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader"
-          ]
-        }
-      }
-      required: [
-        "@odata.type"
-      ]
-      description: "Specifies that the content key ID is in the PlayReady header."
-    }
-    ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier: {
-      type: "object"
-      properties: {
-        @odata.type: {
-          type: "string"
-          enum: [
-            "#Microsoft.Media.ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier"
-          ]
-        }
-        keyId: {
-          oneOf: [
-            {
-              type: "string"
-              pattern: "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$"
-            }
-            {
-              $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
-            }
-          ]
-          description: "The content key ID."
-        }
-      }
-      required: [
-        "@odata.type"
-        "keyId"
-      ]
-      description: "Specifies that the content key ID is specified in the PlayReady configuration."
-    }
-    ContentKeyPolicyRsaTokenKey: {
-      type: "object"
-      properties: {
-        @odata.type: {
-          type: "string"
-          enum: [
-            "#Microsoft.Media.ContentKeyPolicyRsaTokenKey"
-          ]
-        }
-        exponent: {
-          oneOf: [
-            {
-              type: "string"
-              pattern: "^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"
-            }
-            {
-              $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
-            }
-          ]
-          description: "The RSA Parameter exponent"
-        }
-        modulus: {
-          oneOf: [
-            {
-              type: "string"
-              pattern: "^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"
-            }
-            {
-              $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
-            }
-          ]
-          description: "The RSA Parameter modulus"
-        }
-      }
-      required: [
-        "@odata.type"
-        "exponent"
-        "modulus"
-      ]
-      description: "Specifies a RSA key for token validation"
-    }
-    ContentKeyPolicySymmetricTokenKey: {
-      type: "object"
-      properties: {
-        @odata.type: {
-          type: "string"
-          enum: [
-            "#Microsoft.Media.ContentKeyPolicySymmetricTokenKey"
-          ]
-        }
-        keyValue: {
-          oneOf: [
-            {
-              type: "string"
-              pattern: "^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"
-            }
-            {
-              $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
-            }
-          ]
-          description: "The key value of the key"
-        }
-      }
-      required: [
-        "@odata.type"
-        "keyValue"
-      ]
-      description: "Specifies a symmetric key for token validation."
-    }
-    ContentKeyPolicyTokenRestriction: {
-      type: "object"
-      properties: {
-        @odata.type: {
-          type: "string"
-          enum: [
-            "#Microsoft.Media.ContentKeyPolicyTokenRestriction"
-          ]
-        }
-        alternateVerificationKeys: {
-          oneOf: [
-            {
-              type: "array"
-              items: {
-                $ref: "#/definitions/ContentKeyPolicyRestrictionTokenKey"
-              }
-            }
-            {
-              $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
-            }
-          ]
-          description: "A list of alternative verification keys."
-        }
-        audience: {
-          type: "string"
-          description: "The audience for the token."
-        }
-        issuer: {
-          type: "string"
-          description: "The token issuer."
-        }
-        openIdConnectDiscoveryDocument: {
-          type: "string"
-          description: "The OpenID connect discovery document."
-        }
-        primaryVerificationKey: {
-          oneOf: [
-            {
-              $ref: "#/definitions/ContentKeyPolicyRestrictionTokenKey"
-            }
-            {
-              $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
-            }
-          ]
-          description: "Base class for Content Key Policy key for token validation. A derived class must be used to create a token key."
-        }
-        requiredClaims: {
-          oneOf: [
-            {
-              type: "array"
-              items: {
-                $ref: "#/definitions/ContentKeyPolicyTokenClaim"
-              }
-            }
-            {
-              $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
-            }
-          ]
-          description: "A list of required token claims."
-        }
-        restrictionTokenType: {
-          oneOf: [
-            {
-              type: "string"
-              enum: [
-                "Unknown"
-                "Swt"
-                "Jwt"
-              ]
-            }
-            {
-              $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
-            }
-          ]
-          description: "The type of token."
-        }
-      }
-      required: [
-        "@odata.type"
-        "audience"
-        "issuer"
-        "primaryVerificationKey"
-        "restrictionTokenType"
-      ]
-      description: "Represents a token restriction. Provided token must match these requirements for successful license or key delivery."
-    }
-    ContentKeyPolicyUnknownConfiguration: {
-      type: "object"
-      properties: {
-        @odata.type: {
-          type: "string"
-          enum: [
-            "#Microsoft.Media.ContentKeyPolicyUnknownConfiguration"
-          ]
-        }
-      }
-      required: [
-        "@odata.type"
-      ]
-      description: "Represents a ContentKeyPolicyConfiguration that is unavailable in the current API version."
-    }
-    ContentKeyPolicyUnknownRestriction: {
-      type: "object"
-      properties: {
-        @odata.type: {
-          type: "string"
-          enum: [
-            "#Microsoft.Media.ContentKeyPolicyUnknownRestriction"
-          ]
-        }
-      }
-      required: [
-        "@odata.type"
-      ]
-      description: "Represents a ContentKeyPolicyRestriction that is unavailable in the current API version."
-    }
-    ContentKeyPolicyWidevineConfiguration: {
-      type: "object"
-      properties: {
-        @odata.type: {
-          type: "string"
-          enum: [
-            "#Microsoft.Media.ContentKeyPolicyWidevineConfiguration"
-          ]
-        }
-        widevineTemplate: {
-          type: "string"
-          description: "The Widevine template."
-        }
-      }
-      required: [
-        "@odata.type"
-        "widevineTemplate"
-      ]
-      description: "Specifies a configuration for Widevine licenses."
-    }
-    ContentKeyPolicyX509CertificateTokenKey: {
-      type: "object"
-      properties: {
-        @odata.type: {
-          type: "string"
-          enum: [
-            "#Microsoft.Media.ContentKeyPolicyX509CertificateTokenKey"
-          ]
-        }
-        rawBody: {
-          oneOf: [
-            {
-              type: "string"
-              pattern: "^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"
-            }
-            {
-              $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
-            }
-          ]
-          description: "The raw data field of a certificate in PKCS 12 format (X509Certificate2 in .NET)"
-        }
-      }
-      required: [
-        "@odata.type"
-        "rawBody"
-      ]
-      description: "Specifies a certificate for token validation."
-    }
-    TextTrack: {
-      type: "object"
-      properties: {
-        @odata.type: {
-          type: "string"
-          enum: [
-            "#Microsoft.Media.TextTrack"
-          ]
-        }
-        displayName: {
-          type: "string"
-          description: "The display name of the text track on a video player. In HLS, this maps to the NAME attribute of EXT-X-MEDIA."
-        }
-        fileName: {
-          type: "string"
-          description: "The file name to the source file. This file is located in the storage container of the asset."
-        }
-        hlsSettings: {
-          oneOf: [
-            {
-              $ref: "#/definitions/HlsSettings"
-            }
-            {
-              $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
-            }
-          ]
-          description: "The HLS setting for a track."
-        }
-        playerVisibility: {
-          oneOf: [
-            {
-              type: "string"
-              enum: [
-                "Hidden"
-                "Visible"
-              ]
-            }
-            {
-              $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
-            }
-          ]
-          description: "When PlayerVisibility is set to \"Visible\", the text track will be present in the DASH manifest or HLS playlist when requested by a client. When the PlayerVisibility is set to \"Hidden\", the text will not be available to the client. The default value is \"Visible\"."
-        }
-      }
-      required: [
-        "@odata.type"
-      ]
-      description: "Represents a text track in an asset. A text track is usually used for sparse data related to the audio or video tracks."
-    }
-    VideoTrack: {
-      type: "object"
-      properties: {
-        @odata.type: {
-          type: "string"
-          enum: [
-            "#Microsoft.Media.VideoTrack"
-          ]
-        }
-      }
-      required: [
-        "@odata.type"
-      ]
-      description: "Represents a video track in the asset."
-    }
     ContentKeyPolicyConfiguration: {
       oneOf: [
         {
-          $ref: "#/definitions/ContentKeyPolicyClearKeyConfiguration"
+          properties: {
+          }
+          type: "object"
         }
         {
-          $ref: "#/definitions/ContentKeyPolicyUnknownConfiguration"
+          properties: {
+            ask: {
+              description: "The key that must be used as FairPlay Application Secret key. This needs to be base64 encoded."
+            }
+            fairPlayPfx: {
+              description: "The Base64 representation of FairPlay certificate in PKCS 12 (pfx) format (including private key)."
+              type: "string"
+            }
+            fairPlayPfxPassword: {
+              description: "The password encrypting FairPlay certificate in PKCS 12 (pfx) format."
+              type: "string"
+            }
+            offlineRentalConfiguration: {
+              description: "Offline rental policy"
+              oneOf: [
+                {
+                  $ref: "#/definitions/ContentKeyPolicyFairPlayOfflineRentalConfiguration"
+                }
+                {
+                  $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
+                }
+              ]
+            }
+            rentalAndLeaseKeyType: {
+              description: "The rental and lease key type."
+              oneOf: [
+                {
+                  enum: [
+                    "Unknown"
+                    "Undefined"
+                    "DualExpiry"
+                    "PersistentUnlimited"
+                    "PersistentLimited"
+                  ]
+                  type: "string"
+                }
+                {
+                  $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
+                }
+              ]
+            }
+            rentalDuration: {
+              description: "The rental duration. Must be greater than or equal to 0."
+              oneOf: [
+                {
+                  type: "integer"
+                }
+                {
+                  $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
+                }
+              ]
+            }
+          }
+          required: [
+            "ask"
+            "fairPlayPfxPassword"
+            "fairPlayPfx"
+            "rentalAndLeaseKeyType"
+            "rentalDuration"
+          ]
+          type: "object"
         }
         {
-          $ref: "#/definitions/ContentKeyPolicyWidevineConfiguration"
+          properties: {
+            licenses: {
+              description: "The PlayReady licenses."
+              oneOf: [
+                {
+                  items: {
+                    $ref: "#/definitions/ContentKeyPolicyPlayReadyLicense"
+                  }
+                  type: "array"
+                }
+                {
+                  $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
+                }
+              ]
+            }
+            responseCustomData: {
+              description: "The custom response data."
+              type: "string"
+            }
+          }
+          required: [
+            "licenses"
+          ]
+          type: "object"
         }
         {
-          $ref: "#/definitions/ContentKeyPolicyPlayReadyConfiguration"
+          properties: {
+          }
+          type: "object"
         }
         {
-          $ref: "#/definitions/ContentKeyPolicyFairPlayConfiguration"
+          properties: {
+            widevineTemplate: {
+              description: "The Widevine template."
+              type: "string"
+            }
+          }
+          required: [
+            "widevineTemplate"
+          ]
+          type: "object"
         }
       ]
     }
     ContentKeyPolicyPlayReadyContentKeyLocation: {
       oneOf: [
         {
-          $ref: "#/definitions/ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader"
+          properties: {
+          }
+          type: "object"
         }
         {
-          $ref: "#/definitions/ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier"
+          properties: {
+            keyId: {
+              description: "The content key ID."
+              oneOf: [
+                {
+                  pattern: "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$"
+                  type: "string"
+                }
+                {
+                  $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
+                }
+              ]
+            }
+          }
+          required: [
+            "keyId"
+          ]
+          type: "object"
         }
       ]
     }
     ContentKeyPolicyPlayReadyLicense: {
       properties: {
         gracePeriod: {
-          format: "duration"
         }
         relativeBeginDate: {
-          format: "duration"
         }
         relativeExpirationDate: {
-          format: "duration"
         }
       }
     }
     ContentKeyPolicyPlayReadyPlayRight: {
       properties: {
         firstPlayExpiration: {
-          format: "duration"
         }
       }
     }
     ContentKeyPolicyRestriction: {
       oneOf: [
         {
-          $ref: "#/definitions/ContentKeyPolicyOpenRestriction"
+          properties: {
+          }
+          type: "object"
         }
         {
-          $ref: "#/definitions/ContentKeyPolicyUnknownRestriction"
+          properties: {
+            alternateVerificationKeys: {
+              description: "A list of alternative verification keys."
+              oneOf: [
+                {
+                  items: {
+                    $ref: "#/definitions/ContentKeyPolicyRestrictionTokenKey"
+                  }
+                  type: "array"
+                }
+                {
+                  $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
+                }
+              ]
+            }
+            audience: {
+              description: "The audience for the token."
+              type: "string"
+            }
+            issuer: {
+              description: "The token issuer."
+              type: "string"
+            }
+            openIdConnectDiscoveryDocument: {
+              description: "The OpenID connect discovery document."
+              type: "string"
+            }
+            primaryVerificationKey: {
+              description: "The primary verification key."
+              oneOf: [
+                {
+                  $ref: "#/definitions/ContentKeyPolicyRestrictionTokenKey"
+                }
+                {
+                  $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
+                }
+              ]
+            }
+            requiredClaims: {
+              description: "A list of required token claims."
+              oneOf: [
+                {
+                  items: {
+                    $ref: "#/definitions/ContentKeyPolicyTokenClaim"
+                  }
+                  type: "array"
+                }
+                {
+                  $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
+                }
+              ]
+            }
+            restrictionTokenType: {
+              description: "The type of token."
+              oneOf: [
+                {
+                  enum: [
+                    "Unknown"
+                    "Swt"
+                    "Jwt"
+                  ]
+                  type: "string"
+                }
+                {
+                  $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
+                }
+              ]
+            }
+          }
+          required: [
+            "issuer"
+            "audience"
+            "primaryVerificationKey"
+            "restrictionTokenType"
+          ]
+          type: "object"
         }
         {
-          $ref: "#/definitions/ContentKeyPolicyTokenRestriction"
+          properties: {
+          }
+          type: "object"
         }
       ]
     }
     ContentKeyPolicyRestrictionTokenKey: {
       oneOf: [
         {
-          $ref: "#/definitions/ContentKeyPolicySymmetricTokenKey"
+          properties: {
+            exponent: {
+              description: "The RSA Parameter exponent"
+            }
+            modulus: {
+              description: "The RSA Parameter modulus"
+            }
+          }
+          required: [
+            "exponent"
+            "modulus"
+          ]
+          type: "object"
         }
         {
-          $ref: "#/definitions/ContentKeyPolicyRsaTokenKey"
+          properties: {
+            keyValue: {
+              description: "The key value of the key"
+            }
+          }
+          required: [
+            "keyValue"
+          ]
+          type: "object"
         }
         {
-          $ref: "#/definitions/ContentKeyPolicyX509CertificateTokenKey"
+          properties: {
+            rawBody: {
+              description: "The raw data field of a certificate in PKCS 12 format (X509Certificate2 in .NET)"
+            }
+          }
+          required: [
+            "rawBody"
+          ]
+          type: "object"
         }
       ]
     }
     PrivateEndpointConnectionProperties: {
       properties: {
-        provisioningState: {
-          oneOf: [
-            {
-              type: "string"
-              enum: [
-                "Succeeded"
-                "Creating"
-                "Deleting"
-                "Failed"
-              ]
-            }
-            {
-              $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
-            }
-          ]
-          description: "The provisioning state of the private endpoint connection resource."
-        }
       }
     }
     TrackBase: {
       oneOf: [
         {
-          $ref: "#/definitions/AudioTrack"
+          properties: {
+            dashSettings: {
+              description: "The DASH specific setting for the audio track."
+              oneOf: [
+                {
+                  $ref: "#/definitions/DashSettings"
+                }
+                {
+                  $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
+                }
+              ]
+            }
+            displayName: {
+              description: "The display name of the audio track on a video player. In HLS, this maps to the NAME attribute of EXT-X-MEDIA."
+              type: "string"
+            }
+            fileName: {
+              description: "The file name to the source file. This file is located in the storage container of the asset."
+              type: "string"
+            }
+            hlsSettings: {
+              description: "The HLS specific setting for the audio track."
+              oneOf: [
+                {
+                  $ref: "#/definitions/HlsSettings"
+                }
+                {
+                  $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
+                }
+              ]
+            }
+            languageCode: {
+              description: "The RFC5646 language code for the audio track."
+              type: "string"
+            }
+            mpeg4TrackId: {
+              description: "The MPEG-4 audio track ID for the audio track."
+              oneOf: [
+                {
+                  type: "integer"
+                }
+                {
+                  $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
+                }
+              ]
+            }
+          }
+          type: "object"
         }
         {
-          $ref: "#/definitions/VideoTrack"
+          properties: {
+            displayName: {
+              description: "The display name of the text track on a video player. In HLS, this maps to the NAME attribute of EXT-X-MEDIA."
+              type: "string"
+            }
+            fileName: {
+              description: "The file name to the source file. This file is located in the storage container of the asset."
+              type: "string"
+            }
+            hlsSettings: {
+              description: "The HLS specific setting for the text track."
+              oneOf: [
+                {
+                  $ref: "#/definitions/HlsSettings"
+                }
+                {
+                  $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
+                }
+              ]
+            }
+            playerVisibility: {
+              description: "When PlayerVisibility is set to \"Visible\", the text track will be present in the DASH manifest or HLS playlist when requested by a client. When the PlayerVisibility is set to \"Hidden\", the text will not be available to the client. The default value is \"Visible\"."
+              oneOf: [
+                {
+                  enum: [
+                    "Hidden"
+                    "Visible"
+                  ]
+                  type: "string"
+                }
+                {
+                  $ref: "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
+                }
+              ]
+            }
+          }
+          type: "object"
         }
         {
-          $ref: "#/definitions/TextTrack"
+          properties: {
+          }
+          type: "object"
         }
       ]
     }
   }
 }

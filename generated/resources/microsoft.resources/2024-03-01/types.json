[
  {
    "$type": "StringType",
    "minLength": 1,
    "maxLength": 64,
    "pattern": "^[-\\w\\._\\(\\)]+$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Resources/deployments"
  },
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-03-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Resources/deployments",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The location to store the deployment data."
      },
      "properties": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 1,
        "description": "The deployment properties."
      },
      "tags": {
        "type": {
          "$ref": "#/96"
        },
        "flags": 0,
        "description": "Deployment tags"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DeploymentPropertiesOrDeploymentPropertiesExtended",
    "properties": {
      "template": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 4,
        "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
      },
      "templateLink": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 0,
        "description": "The URI of the template. Use either the templateLink property or the template property, but not both."
      },
      "parameters": {
        "type": {
          "$ref": "#/11"
        },
        "flags": 0,
        "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
      },
      "parametersLink": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 0,
        "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both."
      },
      "mode": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 1,
        "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources."
      },
      "debugSetting": {
        "type": {
          "$ref": "#/16"
        },
        "flags": 0,
        "description": "The debug setting of the deployment."
      },
      "onErrorDeployment": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "The deployment on error behavior."
      },
      "expressionEvaluationOptions": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 4,
        "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/38"
        },
        "flags": 2,
        "description": "Denotes the state of provisioning."
      },
      "correlationId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The correlation ID of the deployment."
      },
      "timestamp": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The timestamp of the template deployment."
      },
      "duration": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The duration of the template deployment."
      },
      "outputs": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 2,
        "description": "Key/value pairs that represent deployment output."
      },
      "providers": {
        "type": {
          "$ref": "#/84"
        },
        "flags": 2,
        "description": "The list of resource providers needed for the deployment."
      },
      "dependencies": {
        "type": {
          "$ref": "#/88"
        },
        "flags": 2,
        "description": "The list of deployment dependencies."
      },
      "templateHash": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The hash produced for the template."
      },
      "outputResources": {
        "type": {
          "$ref": "#/90"
        },
        "flags": 2,
        "description": "Array of provisioned resources."
      },
      "validatedResources": {
        "type": {
          "$ref": "#/91"
        },
        "flags": 2,
        "description": "Array of validated resources."
      },
      "error": {
        "type": {
          "$ref": "#/92"
        },
        "flags": 2,
        "description": "The deployment error."
      }
    }
  },
  {
    "$type": "AnyType"
  },
  {
    "$type": "ObjectType",
    "name": "TemplateLink",
    "properties": {
      "uri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
      },
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
      },
      "relativePath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs"
      },
      "contentVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "If included, must match the ContentVersion in the template."
      },
      "queryString": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DeploymentParameter",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "Input value to the parameter ."
      },
      "reference": {
        "type": {
          "$ref": "#/9"
        },
        "flags": 0,
        "description": "Azure Key Vault parameter reference."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "KeyVaultParameterReference",
    "properties": {
      "keyVault": {
        "type": {
          "$ref": "#/10"
        },
        "flags": 1,
        "description": "Azure Key Vault reference."
      },
      "secretName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Azure Key Vault secret name."
      },
      "secretVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Azure Key Vault secret version."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "KeyVaultReference",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Azure Key Vault resource id."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DeploymentPropertiesParameters",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/8"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ParametersLink",
    "properties": {
      "uri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The URI of the parameters file."
      },
      "contentVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "If included, must match the ContentVersion in the template."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Incremental"
  },
  {
    "$type": "StringLiteralType",
    "value": "Complete"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/13"
      },
      {
        "$ref": "#/14"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DebugSetting",
    "properties": {
      "detailLevel": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "OnErrorDeploymentOrOnErrorDeploymentExtended",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment."
      },
      "deploymentName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The deployment to be used on error case."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The state of the provisioning for the on error deployment."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "LastSuccessful"
  },
  {
    "$type": "StringLiteralType",
    "value": "SpecificDeployment"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/18"
      },
      {
        "$ref": "#/19"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ExpressionEvaluationOptions",
    "properties": {
      "scope": {
        "type": {
          "$ref": "#/25"
        },
        "flags": 0,
        "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NotSpecified"
  },
  {
    "$type": "StringLiteralType",
    "value": "Outer"
  },
  {
    "$type": "StringLiteralType",
    "value": "Inner"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/22"
      },
      {
        "$ref": "#/23"
      },
      {
        "$ref": "#/24"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "NotSpecified"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Running"
  },
  {
    "$type": "StringLiteralType",
    "value": "Ready"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Created"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/26"
      },
      {
        "$ref": "#/27"
      },
      {
        "$ref": "#/28"
      },
      {
        "$ref": "#/29"
      },
      {
        "$ref": "#/30"
      },
      {
        "$ref": "#/31"
      },
      {
        "$ref": "#/32"
      },
      {
        "$ref": "#/33"
      },
      {
        "$ref": "#/34"
      },
      {
        "$ref": "#/35"
      },
      {
        "$ref": "#/36"
      },
      {
        "$ref": "#/37"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Provider",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The provider ID."
      },
      "namespace": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The namespace of the resource provider."
      },
      "registrationState": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The registration state of the resource provider."
      },
      "registrationPolicy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The registration policy of the resource provider."
      },
      "resourceTypes": {
        "type": {
          "$ref": "#/78"
        },
        "flags": 2,
        "description": "The collection of provider resource types."
      },
      "providerAuthorizationConsentState": {
        "type": {
          "$ref": "#/83"
        },
        "flags": 0,
        "description": "The provider authorization consent state."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ProviderResourceType",
    "properties": {
      "resourceType": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The resource type."
      },
      "locations": {
        "type": {
          "$ref": "#/41"
        },
        "flags": 0,
        "description": "The collection of locations where this resource type can be created."
      },
      "locationMappings": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "The location mappings that are supported by this resource type."
      },
      "aliases": {
        "type": {
          "$ref": "#/70"
        },
        "flags": 0,
        "description": "The aliases that are supported by this resource type."
      },
      "apiVersions": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 0,
        "description": "The API version."
      },
      "defaultApiVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The default API version."
      },
      "zoneMappings": {
        "type": {
          "$ref": "#/74"
        },
        "flags": 0
      },
      "apiProfiles": {
        "type": {
          "$ref": "#/76"
        },
        "flags": 2,
        "description": "The API profiles for the resource provider."
      },
      "capabilities": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The additional capabilities offered by this resource type."
      },
      "properties": {
        "type": {
          "$ref": "#/77"
        },
        "flags": 0,
        "description": "The properties."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ProviderExtendedLocation",
    "properties": {
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The azure location."
      },
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The extended location type."
      },
      "extendedLocations": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 0,
        "description": "The extended locations for the azure location."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/42"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Alias",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The alias name."
      },
      "paths": {
        "type": {
          "$ref": "#/65"
        },
        "flags": 0,
        "description": "The paths for an alias."
      },
      "type": {
        "type": {
          "$ref": "#/69"
        },
        "flags": 0,
        "description": "The type of the alias."
      },
      "defaultPath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The default path for an alias."
      },
      "defaultPattern": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "The default pattern for an alias."
      },
      "defaultMetadata": {
        "type": {
          "$ref": "#/52"
        },
        "flags": 2,
        "description": "The default alias path metadata. Applies to the default path and to any alias path that doesn't have metadata"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AliasPath",
    "properties": {
      "path": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The path of an alias."
      },
      "apiVersions": {
        "type": {
          "$ref": "#/47"
        },
        "flags": 0,
        "description": "The API versions."
      },
      "pattern": {
        "type": {
          "$ref": "#/48"
        },
        "flags": 0,
        "description": "The pattern for an alias path."
      },
      "metadata": {
        "type": {
          "$ref": "#/52"
        },
        "flags": 2,
        "description": "The metadata of the alias path. If missing, fall back to the default metadata of the alias."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AliasPattern",
    "properties": {
      "phrase": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The alias pattern phrase."
      },
      "variable": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The alias pattern variable."
      },
      "type": {
        "type": {
          "$ref": "#/51"
        },
        "flags": 0,
        "description": "The type of alias pattern"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NotSpecified"
  },
  {
    "$type": "StringLiteralType",
    "value": "Extract"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/49"
      },
      {
        "$ref": "#/50"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "AliasPathMetadata",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/61"
        },
        "flags": 2,
        "description": "The type of the token that the alias path is referring to."
      },
      "attributes": {
        "type": {
          "$ref": "#/64"
        },
        "flags": 2,
        "description": "The attributes of the token that the alias path is referring to."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NotSpecified"
  },
  {
    "$type": "StringLiteralType",
    "value": "Any"
  },
  {
    "$type": "StringLiteralType",
    "value": "String"
  },
  {
    "$type": "StringLiteralType",
    "value": "Object"
  },
  {
    "$type": "StringLiteralType",
    "value": "Array"
  },
  {
    "$type": "StringLiteralType",
    "value": "Integer"
  },
  {
    "$type": "StringLiteralType",
    "value": "Number"
  },
  {
    "$type": "StringLiteralType",
    "value": "Boolean"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/53"
      },
      {
        "$ref": "#/54"
      },
      {
        "$ref": "#/55"
      },
      {
        "$ref": "#/56"
      },
      {
        "$ref": "#/57"
      },
      {
        "$ref": "#/58"
      },
      {
        "$ref": "#/59"
      },
      {
        "$ref": "#/60"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Modifiable"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/62"
      },
      {
        "$ref": "#/63"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/46"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NotSpecified"
  },
  {
    "$type": "StringLiteralType",
    "value": "PlainText"
  },
  {
    "$type": "StringLiteralType",
    "value": "Mask"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/66"
      },
      {
        "$ref": "#/67"
      },
      {
        "$ref": "#/68"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/45"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ZoneMapping",
    "properties": {
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The location of the zone mapping."
      },
      "zones": {
        "type": {
          "$ref": "#/73"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/72"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ApiProfile",
    "properties": {
      "profileVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The profile version."
      },
      "apiVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The API version."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/75"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ProviderResourceTypeProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/40"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NotSpecified"
  },
  {
    "$type": "StringLiteralType",
    "value": "Required"
  },
  {
    "$type": "StringLiteralType",
    "value": "NotRequired"
  },
  {
    "$type": "StringLiteralType",
    "value": "Consented"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/79"
      },
      {
        "$ref": "#/80"
      },
      {
        "$ref": "#/81"
      },
      {
        "$ref": "#/82"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/39"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Dependency",
    "properties": {
      "dependsOn": {
        "type": {
          "$ref": "#/87"
        },
        "flags": 0,
        "description": "The list of dependencies."
      },
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The ID of the dependency."
      },
      "resourceType": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The dependency resource type."
      },
      "resourceName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The dependency resource name."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "BasicDependency",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The ID of the dependency."
      },
      "resourceType": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The dependency resource type."
      },
      "resourceName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The dependency resource name."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/86"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/85"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceReference",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The fully qualified resource Id."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/89"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/89"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ErrorResponse",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The error code."
      },
      "message": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The error message."
      },
      "target": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The error target."
      },
      "details": {
        "type": {
          "$ref": "#/93"
        },
        "flags": 2,
        "description": "The error details."
      },
      "additionalInfo": {
        "type": {
          "$ref": "#/95"
        },
        "flags": 2,
        "description": "The error additional info."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/92"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ErrorAdditionalInfo",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The additional info type."
      },
      "info": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 2,
        "description": "The additional info."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/94"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DeploymentTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Resources/deployments@2024-03-01",
    "scopeType": 0,
    "body": {
      "$ref": "#/4"
    },
    "flags": 0
  },
  {
    "$type": "StringType",
    "minLength": 1,
    "maxLength": 90,
    "pattern": "^[-\\w\\._\\(\\)]+$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Resources/resourceGroups"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-03-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Resources/resourceGroups",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/98"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/99"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/100"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/102"
        },
        "flags": 0,
        "description": "The resource group properties."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The location of the resource group. It cannot be changed after the resource group has been created. It must be one of the supported Azure locations."
      },
      "managedBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The ID of the resource that manages this resource group."
      },
      "tags": {
        "type": {
          "$ref": "#/103"
        },
        "flags": 0,
        "description": "The tags attached to the resource group."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceGroupProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The provisioning state."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceGroupTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Resources/resourceGroups@2024-03-01",
    "scopeType": 4,
    "body": {
      "$ref": "#/101"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Resources/tags"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-03-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Resources/tags",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/105"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/106"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/107"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/109"
        },
        "flags": 1,
        "description": "The set of tags."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {
      "tags": {
        "type": {
          "$ref": "#/110"
        },
        "flags": 0,
        "description": "Dictionary of <string>"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Tags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Resources/tags@2024-03-01",
    "scopeType": 0,
    "body": {
      "$ref": "#/108"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.Resources/deploymentStacks"
  },
  {
    "$type": "StringLiteralType",
    "value": "2024-03-01"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.Resources/deploymentStacks",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/98"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/112"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/113"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The location of the Deployment stack. It cannot be changed after creation. It must be one of the supported Azure locations."
      },
      "tags": {
        "type": {
          "$ref": "#/115"
        },
        "flags": 0,
        "description": "Deployment stack resource tags."
      },
      "properties": {
        "type": {
          "$ref": "#/116"
        },
        "flags": 0,
        "description": "Deployment stack properties."
      },
      "systemData": {
        "type": {
          "$ref": "#/176"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DeploymentStackTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DeploymentStackProperties",
    "properties": {
      "template": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 4,
        "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
      },
      "templateLink": {
        "type": {
          "$ref": "#/117"
        },
        "flags": 4,
        "description": "The URI of the template. Use either the templateLink property or the template property, but not both."
      },
      "parameters": {
        "type": {
          "$ref": "#/121"
        },
        "flags": 0,
        "description": "Name and value pairs that define the deployment parameters for the template. Use this element when providing the parameter values directly in the request, rather than linking to an existing parameter file. Use either the parametersLink property or the parameters property, but not both."
      },
      "parametersLink": {
        "type": {
          "$ref": "#/122"
        },
        "flags": 0,
        "description": "The URI of parameters file. Use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both."
      },
      "actionOnUnmanage": {
        "type": {
          "$ref": "#/123"
        },
        "flags": 1,
        "description": "Defines the behavior of resources that are no longer managed after the Deployment stack is updated or deleted."
      },
      "debugSetting": {
        "type": {
          "$ref": "#/133"
        },
        "flags": 0,
        "description": "The debug setting of the deployment."
      },
      "bypassStackOutOfSyncError": {
        "type": {
          "$ref": "#/134"
        },
        "flags": 4,
        "description": "Flag to bypass service errors that indicate the stack resource list is not correctly synchronized."
      },
      "deploymentScope": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The scope at which the initial deployment should be created. If a scope is not specified, it will default to the scope of the deployment stack. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroupId}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}')."
      },
      "description": {
        "type": {
          "$ref": "#/135"
        },
        "flags": 0,
        "description": "Deployment stack description. Max length of 4096 characters."
      },
      "denySettings": {
        "type": {
          "$ref": "#/136"
        },
        "flags": 1,
        "description": "Defines how resources deployed by the stack are locked."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/154"
        },
        "flags": 2,
        "description": "State of the deployment stack."
      },
      "correlationId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The correlation id of the last Deployment stack upsert or delete operation. It is in GUID format and is used for tracing."
      },
      "detachedResources": {
        "type": {
          "$ref": "#/156"
        },
        "flags": 2,
        "description": "An array of resources that were detached during the most recent Deployment stack update. Detached means that the resource was removed from the template, but no relevant deletion operations were specified. So, the resource still exists while no longer being associated with the stack."
      },
      "deletedResources": {
        "type": {
          "$ref": "#/157"
        },
        "flags": 2,
        "description": "An array of resources that were deleted during the most recent Deployment stack update. Deleted means that the resource was removed from the template and relevant deletion operations were specified."
      },
      "failedResources": {
        "type": {
          "$ref": "#/162"
        },
        "flags": 2,
        "description": "An array of resources that failed to reach goal state during the most recent update. Each resourceId is accompanied by an error message."
      },
      "resources": {
        "type": {
          "$ref": "#/175"
        },
        "flags": 2,
        "description": "An array of resources currently managed by the deployment stack."
      },
      "deploymentId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The resourceId of the deployment resource created by the deployment stack."
      },
      "outputs": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 2,
        "description": "The outputs of the deployment resource created by the deployment stack."
      },
      "duration": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The duration of the last successful Deployment stack update."
      },
      "error": {
        "type": {
          "$ref": "#/159"
        },
        "flags": 0,
        "description": "The error detail."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DeploymentStacksTemplateLink",
    "properties": {
      "uri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
      },
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The resourceId of a Template Spec. Use either the id or uri property, but not both."
      },
      "relativePath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs."
      },
      "queryString": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The query string (for example, a SAS token) to be used with the templateLink URI."
      },
      "contentVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "If included, must match the ContentVersion in the template."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DeploymentParameterAutoGenerated",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "Input value to the parameter."
      },
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Type of the value."
      },
      "reference": {
        "type": {
          "$ref": "#/119"
        },
        "flags": 0,
        "description": "Azure Key Vault parameter reference."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "KeyVaultParameterReferenceAutoGenerated",
    "properties": {
      "keyVault": {
        "type": {
          "$ref": "#/120"
        },
        "flags": 1,
        "description": "Azure Key Vault reference."
      },
      "secretName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Azure Key Vault secret name."
      },
      "secretVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Azure Key Vault secret version."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "KeyVaultReferenceAutoGenerated",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Azure Key Vault resourceId."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "DeploymentStackPropertiesParameters",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/118"
    }
  },
  {
    "$type": "ObjectType",
    "name": "DeploymentStacksParametersLink",
    "properties": {
      "uri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The URI of the parameters file."
      },
      "contentVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "If included, must match the ContentVersion in the template."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ActionOnUnmanage",
    "properties": {
      "resources": {
        "type": {
          "$ref": "#/126"
        },
        "flags": 1,
        "description": "Specifies an action for a newly unmanaged resource. Delete will attempt to delete the resource from Azure. Detach will leave the resource in it's current state."
      },
      "resourceGroups": {
        "type": {
          "$ref": "#/129"
        },
        "flags": 0,
        "description": "Specifies an action for a newly unmanaged resource. Delete will attempt to delete the resource from Azure. Detach will leave the resource in it's current state."
      },
      "managementGroups": {
        "type": {
          "$ref": "#/132"
        },
        "flags": 0,
        "description": "Specifies an action for a newly unmanaged resource. Delete will attempt to delete the resource from Azure. Detach will leave the resource in it's current state."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "delete"
  },
  {
    "$type": "StringLiteralType",
    "value": "detach"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/124"
      },
      {
        "$ref": "#/125"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "delete"
  },
  {
    "$type": "StringLiteralType",
    "value": "detach"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/127"
      },
      {
        "$ref": "#/128"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "delete"
  },
  {
    "$type": "StringLiteralType",
    "value": "detach"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/130"
      },
      {
        "$ref": "#/131"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DeploymentStacksDebugSetting",
    "properties": {
      "detailLevel": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information that is being passed in during deployment. By logging information about the request or response, sensitive data that is retrieved through the deployment operations could potentially be exposed."
      }
    }
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "StringType",
    "maxLength": 4096
  },
  {
    "$type": "ObjectType",
    "name": "DenySettings",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/140"
        },
        "flags": 1,
        "description": "denySettings Mode that defines denied actions."
      },
      "excludedPrincipals": {
        "type": {
          "$ref": "#/141"
        },
        "flags": 0,
        "description": "List of AAD principal IDs excluded from the lock. Up to 5 principals are permitted."
      },
      "excludedActions": {
        "type": {
          "$ref": "#/142"
        },
        "flags": 0,
        "description": "List of role-based management operations that are excluded from the denySettings. Up to 200 actions are permitted. If the denySetting mode is set to 'denyWriteAndDelete', then the following actions are automatically appended to 'excludedActions': '*\\/read' and 'Microsoft.Authorization/locks/delete'. If the denySetting mode is set to 'denyDelete', then the following actions are automatically appended to 'excludedActions': 'Microsoft.Authorization/locks/delete'. Duplicate actions will be removed."
      },
      "applyToChildScopes": {
        "type": {
          "$ref": "#/134"
        },
        "flags": 0,
        "description": "DenySettings will be applied to child resource scopes of every managed resource with a deny assignment."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "denyDelete"
  },
  {
    "$type": "StringLiteralType",
    "value": "denyWriteAndDelete"
  },
  {
    "$type": "StringLiteralType",
    "value": "none"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/137"
      },
      {
        "$ref": "#/138"
      },
      {
        "$ref": "#/139"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "validating"
  },
  {
    "$type": "StringLiteralType",
    "value": "waiting"
  },
  {
    "$type": "StringLiteralType",
    "value": "deploying"
  },
  {
    "$type": "StringLiteralType",
    "value": "canceling"
  },
  {
    "$type": "StringLiteralType",
    "value": "updatingDenyAssignments"
  },
  {
    "$type": "StringLiteralType",
    "value": "deletingResources"
  },
  {
    "$type": "StringLiteralType",
    "value": "succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "deleting"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/143"
      },
      {
        "$ref": "#/144"
      },
      {
        "$ref": "#/145"
      },
      {
        "$ref": "#/146"
      },
      {
        "$ref": "#/147"
      },
      {
        "$ref": "#/148"
      },
      {
        "$ref": "#/149"
      },
      {
        "$ref": "#/150"
      },
      {
        "$ref": "#/151"
      },
      {
        "$ref": "#/152"
      },
      {
        "$ref": "#/153"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ResourceReferenceAutoGenerated",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The resourceId of a resource managed by the deployment stack."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/155"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/155"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceReferenceExtended",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The resourceId of a resource managed by the deployment stack."
      },
      "error": {
        "type": {
          "$ref": "#/159"
        },
        "flags": 0,
        "description": "The error detail."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ErrorDetail",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The error code."
      },
      "message": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The error message."
      },
      "target": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The error target."
      },
      "details": {
        "type": {
          "$ref": "#/160"
        },
        "flags": 2,
        "description": "The error details."
      },
      "additionalInfo": {
        "type": {
          "$ref": "#/161"
        },
        "flags": 2,
        "description": "The error additional info."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/159"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/94"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/158"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ManagedResourceReference",
    "properties": {
      "status": {
        "type": {
          "$ref": "#/167"
        },
        "flags": 0,
        "description": "Current management state of the resource in the deployment stack."
      },
      "denyStatus": {
        "type": {
          "$ref": "#/174"
        },
        "flags": 0,
        "description": "denyAssignment settings applied to the resource."
      },
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The resourceId of a resource managed by the deployment stack."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "managed"
  },
  {
    "$type": "StringLiteralType",
    "value": "removeDenyFailed"
  },
  {
    "$type": "StringLiteralType",
    "value": "deleteFailed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/164"
      },
      {
        "$ref": "#/165"
      },
      {
        "$ref": "#/166"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "denyDelete"
  },
  {
    "$type": "StringLiteralType",
    "value": "notSupported"
  },
  {
    "$type": "StringLiteralType",
    "value": "inapplicable"
  },
  {
    "$type": "StringLiteralType",
    "value": "denyWriteAndDelete"
  },
  {
    "$type": "StringLiteralType",
    "value": "removedBySystem"
  },
  {
    "$type": "StringLiteralType",
    "value": "none"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/168"
      },
      {
        "$ref": "#/169"
      },
      {
        "$ref": "#/170"
      },
      {
        "$ref": "#/171"
      },
      {
        "$ref": "#/172"
      },
      {
        "$ref": "#/173"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/163"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SystemData",
    "properties": {
      "createdBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The identity that created the resource."
      },
      "createdByType": {
        "type": {
          "$ref": "#/181"
        },
        "flags": 0,
        "description": "The type of identity that created the resource."
      },
      "createdAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp of resource creation (UTC)."
      },
      "lastModifiedBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The identity that last modified the resource."
      },
      "lastModifiedByType": {
        "type": {
          "$ref": "#/186"
        },
        "flags": 0,
        "description": "The type of identity that last modified the resource."
      },
      "lastModifiedAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp of resource last modification (UTC)"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/177"
      },
      {
        "$ref": "#/178"
      },
      {
        "$ref": "#/179"
      },
      {
        "$ref": "#/180"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/182"
      },
      {
        "$ref": "#/183"
      },
      {
        "$ref": "#/184"
      },
      {
        "$ref": "#/185"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.Resources/deploymentStacks@2024-03-01",
    "scopeType": 14,
    "body": {
      "$ref": "#/114"
    },
    "flags": 0
  }
]
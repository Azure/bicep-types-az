[
  {
    "$type": "StringType",
    "pattern": "^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Nginx.NginxPlus/nginxDeployments"
  },
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-03-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Nginx.NginxPlus/nginxDeployments",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "Nginx Deployment Properties"
      },
      "identity": {
        "type": {
          "$ref": "#/46"
        },
        "flags": 0,
        "description": "Identity Properties"
      },
      "sku": {
        "type": {
          "$ref": "#/54"
        },
        "flags": 0,
        "description": "Resource Sku"
      },
      "tags": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/56"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxDeploymentProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 2,
        "description": "Provisioning State"
      },
      "nginxVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2
      },
      "networkProfile": {
        "type": {
          "$ref": "#/16"
        },
        "flags": 0,
        "description": "Nginx Network Profile"
      },
      "ipAddress": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The IP address of the deployment."
      },
      "enableDiagnosticsSupport": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 0
      },
      "logging": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 0,
        "description": "Nginx Logging"
      },
      "scalingProperties": {
        "type": {
          "$ref": "#/29"
        },
        "flags": 0,
        "description": "Information on how the deployment will be scaled."
      },
      "autoUpgradeProfile": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 0,
        "description": "Autoupgrade settings of a deployment."
      },
      "userProfile": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "Nginx Deployment User Profile"
      },
      "nginxAppProtect": {
        "type": {
          "$ref": "#/38"
        },
        "flags": 0,
        "description": "Settings for NGINX App Protect (NAP)"
      },
      "dataplaneApiEndpoint": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Dataplane API endpoint for the caller to update the NGINX state of the deployment."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleted"
  },
  {
    "$type": "StringLiteralType",
    "value": "NotSpecified"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/6"
      },
      {
        "$ref": "#/7"
      },
      {
        "$ref": "#/8"
      },
      {
        "$ref": "#/9"
      },
      {
        "$ref": "#/10"
      },
      {
        "$ref": "#/11"
      },
      {
        "$ref": "#/12"
      },
      {
        "$ref": "#/13"
      },
      {
        "$ref": "#/14"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "NginxNetworkProfile",
    "properties": {
      "frontEndIPConfiguration": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "Nginx Frontend IP Configuration"
      },
      "networkInterfaceConfiguration": {
        "type": {
          "$ref": "#/25"
        },
        "flags": 0,
        "description": "Nginx Network Interface Configuration"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxFrontendIPConfiguration",
    "properties": {
      "publicIPAddresses": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 0
      },
      "privateIPAddresses": {
        "type": {
          "$ref": "#/24"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxPublicIPAddress",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/18"
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxPrivateIPAddress",
    "properties": {
      "privateIPAddress": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "privateIPAllocationMethod": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "Nginx Private IP Allocation Method"
      },
      "subnetId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Static"
  },
  {
    "$type": "StringLiteralType",
    "value": "Dynamic"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/21"
      },
      {
        "$ref": "#/22"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/20"
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxNetworkInterfaceConfiguration",
    "properties": {
      "subnetId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "ObjectType",
    "name": "NginxLogging",
    "properties": {
      "storageAccount": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 0,
        "description": "Nginx Storage Account"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxStorageAccount",
    "properties": {
      "accountName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "containerName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxDeploymentScalingProperties",
    "properties": {
      "capacity": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 0
      },
      "autoScaleSettings": {
        "type": {
          "$ref": "#/31"
        },
        "flags": 0,
        "description": "The settings for enabling automatic scaling of the deployment. If this field is specified, 'scale.capacity' must be empty."
      }
    }
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "ObjectType",
    "name": "NginxDeploymentScalingPropertiesAutoScaleSettings",
    "properties": {
      "profiles": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 1
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ScaleProfile",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1
      },
      "capacity": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 1,
        "description": "The capacity parameters of the profile."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ScaleProfileCapacity",
    "properties": {
      "min": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 1,
        "description": "The minimum number of NCUs the deployment can be autoscaled to."
      },
      "max": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 1,
        "description": "The maximum number of NCUs the deployment can be autoscaled to."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/32"
    }
  },
  {
    "$type": "ObjectType",
    "name": "AutoUpgradeProfile",
    "properties": {
      "upgradeChannel": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Channel used for autoupgrade."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxDeploymentUserProfile",
    "properties": {
      "preferredEmail": {
        "type": {
          "$ref": "#/37"
        },
        "flags": 0,
        "description": "The preferred support contact email address of the user used for sending alerts and notification. Can be an empty string or a valid email address."
      }
    }
  },
  {
    "$type": "StringType",
    "pattern": "^$|^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"
  },
  {
    "$type": "ObjectType",
    "name": "NginxDeploymentPropertiesNginxAppProtect",
    "properties": {
      "webApplicationFirewallSettings": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 1,
        "description": "Settings for the NGINX App Protect Web Application Firewall (WAF)"
      },
      "webApplicationFirewallStatus": {
        "type": {
          "$ref": "#/43"
        },
        "flags": 2,
        "description": "The status of the NGINX App Protect Web Application Firewall"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "WebApplicationFirewallSettings",
    "properties": {
      "activationState": {
        "type": {
          "$ref": "#/42"
        },
        "flags": 0,
        "description": "The activation state of the WAF. Use 'Enabled' to enable the WAF and 'Disabled' to disable it."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/40"
      },
      {
        "$ref": "#/41"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "WebApplicationFirewallStatus",
    "properties": {
      "wafRelease": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "NGINX App Protect WAF release version"
      },
      "attackSignaturesPackage": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 2,
        "description": "Package containing attack signatures for the NGINX App Protect Web Application Firewall (WAF)."
      },
      "botSignaturesPackage": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 2,
        "description": "Package containing bot signatures for the NGINX App Protect Web Application Firewall (WAF)."
      },
      "threatCampaignsPackage": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 2,
        "description": "Package containing threat campaigns for the NGINX App Protect Web Application Firewall (WAF)."
      },
      "componentVersions": {
        "type": {
          "$ref": "#/45"
        },
        "flags": 2,
        "description": "Versions of the NGINX App Protect Web Application Firewall (WAF) components."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "WebApplicationFirewallPackage",
    "properties": {
      "version": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The version of the NGINX App Protect Web Application Firewall (WAF) package."
      },
      "revisionDatetime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The date and time of the package revision."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "WebApplicationFirewallComponentVersions",
    "properties": {
      "wafEngineVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The version of the NGINX App Protect Web Application Firewall (WAF) engine."
      },
      "wafNginxVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The version of the NGINX App Protect Web Application Firewall (WAF) module for NGINX."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IdentityProperties",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2
      },
      "tenantId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2
      },
      "type": {
        "type": {
          "$ref": "#/51"
        },
        "flags": 0,
        "description": "Identity Type"
      },
      "userAssignedIdentities": {
        "type": {
          "$ref": "#/53"
        },
        "flags": 0,
        "description": "Dictionary of <UserIdentityProperties>"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "UserAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned, UserAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/47"
      },
      {
        "$ref": "#/48"
      },
      {
        "$ref": "#/49"
      },
      {
        "$ref": "#/50"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "UserIdentityProperties",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2
      },
      "clientId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IdentityPropertiesUserAssignedIdentities",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/52"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ResourceSku",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "Name of the SKU."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "TrackedResourceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "SystemData",
    "properties": {
      "createdBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The identity that created the resource."
      },
      "createdByType": {
        "type": {
          "$ref": "#/61"
        },
        "flags": 0,
        "description": "The type of identity that created the resource."
      },
      "createdAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp of resource creation (UTC)."
      },
      "lastModifiedBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The identity that last modified the resource."
      },
      "lastModifiedByType": {
        "type": {
          "$ref": "#/66"
        },
        "flags": 0,
        "description": "The type of identity that last modified the resource."
      },
      "lastModifiedAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp of resource last modification (UTC)"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/57"
      },
      {
        "$ref": "#/58"
      },
      {
        "$ref": "#/59"
      },
      {
        "$ref": "#/60"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/62"
      },
      {
        "$ref": "#/63"
      },
      {
        "$ref": "#/64"
      },
      {
        "$ref": "#/65"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Nginx.NginxPlus/nginxDeployments@2025-03-01-preview",
    "body": {
      "$ref": "#/4"
    },
    "readableScopes": 8,
    "writableScopes": 8
  },
  {
    "$type": "StringLiteralType",
    "value": "Nginx.NginxPlus/nginxDeployments/apiKeys"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-03-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Nginx.NginxPlus/nginxDeployments/apiKeys",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/68"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/69"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/71"
        },
        "flags": 0,
        "description": "Nginx Deployment Api Key Request Properties"
      },
      "systemData": {
        "type": {
          "$ref": "#/56"
        },
        "flags": 2,
        "description": "Metadata pertaining to creation and last modification of the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxDeploymentApiKeyRequestPropertiesOrNginxDeploymentApiKeyResponseProperties",
    "properties": {
      "secretText": {
        "type": {
          "$ref": "#/72"
        },
        "flags": 4,
        "description": "Secret text to be used as a Dataplane API Key. This is a write only property that can never be read back, but the first three characters will be returned in the 'hint' property."
      },
      "endDateTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The time after which this Dataplane API Key is no longer valid."
      },
      "hint": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The first three characters of the secret text to help identify it in use. This property is read-only."
      }
    }
  },
  {
    "$type": "StringType",
    "sensitive": true
  },
  {
    "$type": "ResourceType",
    "name": "Nginx.NginxPlus/nginxDeployments/apiKeys@2025-03-01-preview",
    "body": {
      "$ref": "#/70"
    },
    "readableScopes": 8,
    "writableScopes": 8
  },
  {
    "$type": "StringLiteralType",
    "value": "Nginx.NginxPlus/nginxDeployments/certificates"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-03-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Nginx.NginxPlus/nginxDeployments/certificates",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/74"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/75"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/77"
        },
        "flags": 0,
        "description": "Nginx Certificate Properties"
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/56"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxCertificateProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/87"
        },
        "flags": 2,
        "description": "Provisioning State"
      },
      "keyVirtualPath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "certificateVirtualPath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "keyVaultSecretId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "sha1Thumbprint": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2
      },
      "keyVaultSecretVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2
      },
      "keyVaultSecretCreated": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2
      },
      "certificateError": {
        "type": {
          "$ref": "#/88"
        },
        "flags": 0,
        "description": "Nginx Certificate Error Response Body"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleted"
  },
  {
    "$type": "StringLiteralType",
    "value": "NotSpecified"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/78"
      },
      {
        "$ref": "#/79"
      },
      {
        "$ref": "#/80"
      },
      {
        "$ref": "#/81"
      },
      {
        "$ref": "#/82"
      },
      {
        "$ref": "#/83"
      },
      {
        "$ref": "#/84"
      },
      {
        "$ref": "#/85"
      },
      {
        "$ref": "#/86"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "NginxCertificateErrorResponseBody",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "message": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Nginx.NginxPlus/nginxDeployments/certificates@2025-03-01-preview",
    "body": {
      "$ref": "#/76"
    },
    "readableScopes": 8,
    "writableScopes": 8
  },
  {
    "$type": "StringType",
    "pattern": "^[a-z][a-z0-9]*$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Nginx.NginxPlus/nginxDeployments/configurations"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-03-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Nginx.NginxPlus/nginxDeployments/configurations",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/90"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/91"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/92"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/94"
        },
        "flags": 0,
        "description": "Nginx Configuration Request Properties"
      },
      "systemData": {
        "type": {
          "$ref": "#/56"
        },
        "flags": 2,
        "description": "Metadata pertaining to creation and last modification of the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxConfigurationRequestPropertiesOrNginxConfigurationResponseProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/104"
        },
        "flags": 2,
        "description": "Provisioning State"
      },
      "files": {
        "type": {
          "$ref": "#/106"
        },
        "flags": 0
      },
      "protectedFiles": {
        "type": {
          "$ref": "#/108"
        },
        "flags": 0
      },
      "package": {
        "type": {
          "$ref": "#/109"
        },
        "flags": 0,
        "description": "Nginx Configuration Package"
      },
      "rootFile": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleted"
  },
  {
    "$type": "StringLiteralType",
    "value": "NotSpecified"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/95"
      },
      {
        "$ref": "#/96"
      },
      {
        "$ref": "#/97"
      },
      {
        "$ref": "#/98"
      },
      {
        "$ref": "#/99"
      },
      {
        "$ref": "#/100"
      },
      {
        "$ref": "#/101"
      },
      {
        "$ref": "#/102"
      },
      {
        "$ref": "#/103"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "NginxConfigurationFile",
    "properties": {
      "content": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "virtualPath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/105"
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxConfigurationProtectedFileRequestOrNginxConfigurationProtectedFileResponse",
    "properties": {
      "content": {
        "type": {
          "$ref": "#/72"
        },
        "flags": 4,
        "description": "The content of the protected file. This value is a PUT only value. If you perform a GET request on this value, it will be empty because it is a protected file."
      },
      "virtualPath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The virtual path of the protected file."
      },
      "contentHash": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The hash of the content of the file. This value is used to determine if the file has changed."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/107"
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxConfigurationPackage",
    "properties": {
      "data": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      },
      "protectedFiles": {
        "type": {
          "$ref": "#/110"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Nginx.NginxPlus/nginxDeployments/configurations@2025-03-01-preview",
    "body": {
      "$ref": "#/93"
    },
    "readableScopes": 8,
    "writableScopes": 8
  },
  {
    "$type": "StringLiteralType",
    "value": "Nginx.NginxPlus/nginxDeployments/wafPolicies"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-03-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Nginx.NginxPlus/nginxDeployments/wafPolicies",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/112"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/113"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/115"
        },
        "flags": 0,
        "description": "Nginx Deployment Waf Policy Properties"
      },
      "systemData": {
        "type": {
          "$ref": "#/56"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxDeploymentWafPolicyProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/125"
        },
        "flags": 2,
        "description": "Provisioning State"
      },
      "content": {
        "type": {
          "$ref": "#/126"
        },
        "flags": 0,
        "description": "The byte content of the Policy"
      },
      "filepath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The file path where the Policy is to be saved"
      },
      "compilingState": {
        "type": {
          "$ref": "#/127"
        },
        "flags": 2,
        "description": "Nginx Deployment Waf Policy Compiling Status"
      },
      "applyingState": {
        "type": {
          "$ref": "#/133"
        },
        "flags": 2,
        "description": "Nginx Deployment Waf Policy Applying Status"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleted"
  },
  {
    "$type": "StringLiteralType",
    "value": "NotSpecified"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/116"
      },
      {
        "$ref": "#/117"
      },
      {
        "$ref": "#/118"
      },
      {
        "$ref": "#/119"
      },
      {
        "$ref": "#/120"
      },
      {
        "$ref": "#/121"
      },
      {
        "$ref": "#/122"
      },
      {
        "$ref": "#/123"
      },
      {
        "$ref": "#/124"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "AnyType"
  },
  {
    "$type": "ObjectType",
    "name": "NginxDeploymentWafPolicyCompilingStatus",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/132"
        },
        "flags": 2,
        "description": "Machine readable code indicating the compilation status of a WAF Policy."
      },
      "displayStatus": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "A readable string of the current status, and sometimes have the reason for the current state. If the CompilingStatus is Failed the Display Status will be The waf Policy failed to compile."
      },
      "time": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The date and time the policy was compiled in UTC."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NotStarted"
  },
  {
    "$type": "StringLiteralType",
    "value": "InProgress"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/128"
      },
      {
        "$ref": "#/129"
      },
      {
        "$ref": "#/130"
      },
      {
        "$ref": "#/131"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "NginxDeploymentWafPolicyApplyingStatus",
    "properties": {
      "code": {
        "type": {
          "$ref": "#/139"
        },
        "flags": 2,
        "description": "Machine readable code indicating the applying status code of a WAF Policy."
      },
      "displayStatus": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "A readable string of the current status, and sometimes have the reason for the current state."
      },
      "time": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The date and time in UTC the current applying status was set."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NotApplied"
  },
  {
    "$type": "StringLiteralType",
    "value": "Applying"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Removing"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/134"
      },
      {
        "$ref": "#/135"
      },
      {
        "$ref": "#/136"
      },
      {
        "$ref": "#/137"
      },
      {
        "$ref": "#/138"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Nginx.NginxPlus/nginxDeployments/wafPolicies@2025-03-01-preview",
    "body": {
      "$ref": "#/114"
    },
    "readableScopes": 8,
    "writableScopes": 8
  },
  {
    "$type": "ObjectType",
    "name": "NginxDeploymentDefaultWafPolicyListResponse",
    "properties": {
      "value": {
        "type": {
          "$ref": "#/143"
        },
        "flags": 0
      },
      "nextLink": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NginxDeploymentDefaultWafPolicyProperties",
    "properties": {
      "content": {
        "type": {
          "$ref": "#/126"
        },
        "flags": 2
      },
      "filepath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/142"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listDefaultWafPolicies",
    "resourceType": "Nginx.NginxPlus/nginxDeployments",
    "apiVersion": "2025-03-01-preview",
    "output": {
      "$ref": "#/141"
    }
  }
]
[{"1":{"Kind":1}},{"1":{"Kind":2}},{"1":{"Kind":3}},{"1":{"Kind":4}},{"1":{"Kind":5}},{"1":{"Kind":6}},{"1":{"Kind":7}},{"1":{"Kind":8}},{"6":{"Value":"2018-02-14"}},{"3":{"ItemType":7}},{"6":{"Value":"Microsoft.KeyVault/vaults"}},{"2":{"Name":"Microsoft.KeyVault/vaults","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":4,"Flags":9,"Description":"The resource name"},"type":{"Type":10,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":8,"Flags":10,"Description":"The resource api version"},"location":{"Type":4,"Flags":1,"Description":"The supported Azure location where the key vault should be created."},"tags":{"Type":12,"Flags":0,"Description":"The tags that will be assigned to the key vault."},"properties":{"Type":13,"Flags":1,"Description":"Properties of the vault"}}}},{"2":{"Name":"Dictionary\u003Cstring,String\u003E","Properties":{},"AdditionalProperties":4}},{"2":{"Name":"VaultProperties","Properties":{"tenantId":{"Type":4,"Flags":1,"Description":"The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault."},"sku":{"Type":14,"Flags":1,"Description":"SKU details"},"accessPolicies":{"Type":82,"Flags":0,"Description":"An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault\u0027s tenant ID. When \u0060createMode\u0060 is set to \u0060recover\u0060, access policies are not required. Otherwise, access policies are required."},"vaultUri":{"Type":4,"Flags":0,"Description":"The URI of the vault for performing operations on keys and secrets."},"enabledForDeployment":{"Type":2,"Flags":0,"Description":"Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."},"enabledForDiskEncryption":{"Type":2,"Flags":0,"Description":"Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."},"enabledForTemplateDeployment":{"Type":2,"Flags":0,"Description":"Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault."},"enableSoftDelete":{"Type":2,"Flags":0,"Description":"Property to specify whether the \u0027soft delete\u0027 functionality is enabled for this key vault. It does not accept false value."},"createMode":{"Type":85,"Flags":0,"Description":"The vault\u0027s create mode to indicate whether the vault need to be recovered or not."},"enablePurgeProtection":{"Type":2,"Flags":0,"Description":"Property specifying whether protection against purge is enabled for this vault. Setting this property to true activates protection against purge for this vault and its content - only the Key Vault service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible - that is, the property does not accept false as its value."},"networkAcls":{"Type":86,"Flags":0,"Description":"A set of rules governing the network accessibility of a vault."},"privateEndpointConnections":{"Type":113,"Flags":2,"Description":"List of private endpoint connections associated with the key vault."}}}},{"2":{"Name":"Sku","Properties":{"family":{"Type":4,"Flags":1,"Description":"SKU family name"},"name":{"Type":17,"Flags":1,"Description":"SKU name to specify whether the key vault is a standard vault or a premium vault."}}}},{"6":{"Value":"standard"}},{"6":{"Value":"premium"}},{"5":{"Elements":[15,16]}},{"2":{"Name":"AccessPolicyEntry","Properties":{"tenantId":{"Type":4,"Flags":1,"Description":"The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault."},"objectId":{"Type":4,"Flags":1,"Description":"The object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies."},"applicationId":{"Type":4,"Flags":0,"Description":" Application ID of the client making request on behalf of a principal"},"permissions":{"Type":19,"Flags":1,"Description":"Permissions the identity has for keys, secrets, certificates and storage."}}}},{"2":{"Name":"Permissions","Properties":{"keys":{"Type":37,"Flags":0,"Description":"Permissions to keys"},"secrets":{"Type":47,"Flags":0,"Description":"Permissions to secrets"},"certificates":{"Type":65,"Flags":0,"Description":"Permissions to certificates"},"storage":{"Type":81,"Flags":0,"Description":"Permissions to storage accounts"}}}},{"6":{"Value":"encrypt"}},{"6":{"Value":"decrypt"}},{"6":{"Value":"wrapKey"}},{"6":{"Value":"unwrapKey"}},{"6":{"Value":"sign"}},{"6":{"Value":"verify"}},{"6":{"Value":"get"}},{"6":{"Value":"list"}},{"6":{"Value":"create"}},{"6":{"Value":"update"}},{"6":{"Value":"import"}},{"6":{"Value":"delete"}},{"6":{"Value":"backup"}},{"6":{"Value":"restore"}},{"6":{"Value":"recover"}},{"6":{"Value":"purge"}},{"5":{"Elements":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35]}},{"3":{"ItemType":36}},{"6":{"Value":"get"}},{"6":{"Value":"list"}},{"6":{"Value":"set"}},{"6":{"Value":"delete"}},{"6":{"Value":"backup"}},{"6":{"Value":"restore"}},{"6":{"Value":"recover"}},{"6":{"Value":"purge"}},{"5":{"Elements":[38,39,40,41,42,43,44,45]}},{"3":{"ItemType":46}},{"6":{"Value":"get"}},{"6":{"Value":"list"}},{"6":{"Value":"delete"}},{"6":{"Value":"create"}},{"6":{"Value":"import"}},{"6":{"Value":"update"}},{"6":{"Value":"managecontacts"}},{"6":{"Value":"getissuers"}},{"6":{"Value":"listissuers"}},{"6":{"Value":"setissuers"}},{"6":{"Value":"deleteissuers"}},{"6":{"Value":"manageissuers"}},{"6":{"Value":"recover"}},{"6":{"Value":"purge"}},{"6":{"Value":"backup"}},{"6":{"Value":"restore"}},{"5":{"Elements":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63]}},{"3":{"ItemType":64}},{"6":{"Value":"get"}},{"6":{"Value":"list"}},{"6":{"Value":"delete"}},{"6":{"Value":"set"}},{"6":{"Value":"update"}},{"6":{"Value":"regeneratekey"}},{"6":{"Value":"recover"}},{"6":{"Value":"purge"}},{"6":{"Value":"backup"}},{"6":{"Value":"restore"}},{"6":{"Value":"setsas"}},{"6":{"Value":"listsas"}},{"6":{"Value":"getsas"}},{"6":{"Value":"deletesas"}},{"5":{"Elements":[66,67,68,69,70,71,72,73,74,75,76,77,78,79]}},{"3":{"ItemType":80}},{"3":{"ItemType":18}},{"6":{"Value":"recover"}},{"6":{"Value":"default"}},{"5":{"Elements":[83,84]}},{"2":{"Name":"NetworkRuleSet","Properties":{"bypass":{"Type":89,"Flags":0,"Description":"Tells what traffic can bypass network rules. This can be \u0027AzureServices\u0027 or \u0027None\u0027.  If not specified the default is \u0027AzureServices\u0027."},"defaultAction":{"Type":92,"Flags":0,"Description":"The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated."},"ipRules":{"Type":94,"Flags":0,"Description":"The list of IP address rules."},"virtualNetworkRules":{"Type":96,"Flags":0,"Description":"The list of virtual network rules."}}}},{"6":{"Value":"AzureServices"}},{"6":{"Value":"None"}},{"5":{"Elements":[87,88]}},{"6":{"Value":"Allow"}},{"6":{"Value":"Deny"}},{"5":{"Elements":[90,91]}},{"2":{"Name":"IPRule","Properties":{"value":{"Type":4,"Flags":1,"Description":"An IPv4 address range in CIDR notation, such as \u0027124.56.78.91\u0027 (simple IP address) or \u0027124.56.78.0/24\u0027 (all addresses that start with 124.56.78)."}}}},{"3":{"ItemType":93}},{"2":{"Name":"VirtualNetworkRule","Properties":{"id":{"Type":4,"Flags":1,"Description":"Full resource id of a vnet subnet, such as \u0027/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1\u0027."}}}},{"3":{"ItemType":95}},{"2":{"Name":"PrivateEndpointConnectionItem","Properties":{"properties":{"Type":98,"Flags":0,"Description":"Properties of the private endpoint connection resource."}}}},{"2":{"Name":"PrivateEndpointConnectionProperties","Properties":{"privateEndpoint":{"Type":99,"Flags":0,"Description":"Private endpoint object properties."},"privateLinkServiceConnectionState":{"Type":100,"Flags":0,"Description":"An object that represents the approval state of the private link connection."},"provisioningState":{"Type":112,"Flags":0,"Description":"Provisioning state of the private endpoint connection."}}}},{"2":{"Name":"PrivateEndpoint","Properties":{"id":{"Type":4,"Flags":2,"Description":"Full identifier of the private endpoint resource."}}}},{"2":{"Name":"PrivateLinkServiceConnectionState","Properties":{"status":{"Type":105,"Flags":0,"Description":"Indicates whether the connection has been approved, rejected or removed by the key vault owner."},"description":{"Type":4,"Flags":0,"Description":"The reason for approval or rejection."},"actionRequired":{"Type":4,"Flags":0,"Description":"A message indicating if changes on the service provider require any updates on the consumer."}}}},{"6":{"Value":"Pending"}},{"6":{"Value":"Approved"}},{"6":{"Value":"Rejected"}},{"6":{"Value":"Disconnected"}},{"5":{"Elements":[101,102,103,104]}},{"6":{"Value":"Succeeded"}},{"6":{"Value":"Creating"}},{"6":{"Value":"Updating"}},{"6":{"Value":"Deleting"}},{"6":{"Value":"Failed"}},{"6":{"Value":"Disconnected"}},{"5":{"Elements":[106,107,108,109,110,111]}},{"3":{"ItemType":97}},{"4":{"Name":"Microsoft.KeyVault/vaults@2018-02-14","ScopeType":8,"Body":11}},{"6":{"Value":"add"}},{"6":{"Value":"replace"}},{"6":{"Value":"remove"}},{"5":{"Elements":[115,116,117]}},{"6":{"Value":"Microsoft.KeyVault/vaults/accessPolicies"}},{"2":{"Name":"Microsoft.KeyVault/vaults/accessPolicies","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":118,"Flags":9,"Description":"The resource name"},"type":{"Type":119,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":8,"Flags":10,"Description":"The resource api version"},"location":{"Type":4,"Flags":2,"Description":"The resource type of the access policy."},"properties":{"Type":121,"Flags":1,"Description":"Properties of the vault access policy"}}}},{"2":{"Name":"VaultAccessPolicyProperties","Properties":{"accessPolicies":{"Type":122,"Flags":1,"Description":"An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault\u0027s tenant ID."}}}},{"3":{"ItemType":18}},{"4":{"Name":"Microsoft.KeyVault/vaults/accessPolicies@2018-02-14","ScopeType":8,"Body":120}},{"6":{"Value":"Microsoft.KeyVault/vaults/privateEndpointConnections"}},{"2":{"Name":"Microsoft.KeyVault/vaults/privateEndpointConnections","Properties":{"id":{"Type":4,"Flags":10,"Description":"The resource id"},"name":{"Type":4,"Flags":9,"Description":"The resource name"},"type":{"Type":124,"Flags":10,"Description":"The resource type"},"apiVersion":{"Type":8,"Flags":10,"Description":"The resource api version"},"location":{"Type":4,"Flags":2,"Description":"Azure location of the key vault resource."},"tags":{"Type":126,"Flags":2,"Description":"Tags assigned to the key vault resource."},"properties":{"Type":98,"Flags":0,"Description":"Properties of the private endpoint connection resource."}}}},{"2":{"Name":"Dictionary\u003Cstring,String\u003E","Properties":{},"AdditionalProperties":4}},{"4":{"Name":"Microsoft.KeyVault/vaults/privateEndpointConnections@2018-02-14","ScopeType":8,"Body":125}}]

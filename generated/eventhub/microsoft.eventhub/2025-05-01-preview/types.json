[
  {
    "$type": "StringType",
    "minLength": 6,
    "maxLength": 50
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.EventHub/clusters"
  },
  {
    "$type": "StringType"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.EventHub/clusters",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 0,
        "description": "Event Hubs Cluster properties supplied in responses in List or Get operations."
      },
      "tags": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The geo-location where the resource lives"
      },
      "sku": {
        "type": {
          "$ref": "#/22"
        },
        "flags": 0,
        "description": "Properties of the cluster SKU."
      },
      "systemData": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ClusterProperties",
    "properties": {
      "createdAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The UTC time when the Event Hubs Cluster was created."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 2,
        "description": "Provisioning state of the Cluster."
      },
      "updatedAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The UTC time when the Event Hubs Cluster was last updated."
      },
      "metricId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The metric ID of the cluster resource. Provided by the service and not modifiable by the user."
      },
      "status": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Status of the Cluster resource"
      },
      "supportsScaling": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "A value that indicates whether Scaling is Supported."
      },
      "platformCapabilities": {
        "type": {
          "$ref": "#/16"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Scaling"
  },
  {
    "$type": "StringLiteralType",
    "value": "Active"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/6"
      },
      {
        "$ref": "#/7"
      },
      {
        "$ref": "#/8"
      },
      {
        "$ref": "#/9"
      },
      {
        "$ref": "#/10"
      },
      {
        "$ref": "#/11"
      },
      {
        "$ref": "#/12"
      },
      {
        "$ref": "#/13"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "ObjectType",
    "name": "PlatformCapabilities",
    "properties": {
      "confidentialCompute": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ConfidentialCompute",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 0,
        "description": "Setting to Enable or Disable Confidential Compute"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/18"
      },
      {
        "$ref": "#/19"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ClusterTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "ClusterSku",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/24"
        },
        "flags": 1,
        "description": "Name of this SKU."
      },
      "capacity": {
        "type": {
          "$ref": "#/25"
        },
        "flags": 0,
        "description": "The quantity of Event Hubs Cluster Capacity Units contained in this cluster."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Dedicated"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/23"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "IntegerType",
    "minValue": 1
  },
  {
    "$type": "ObjectType",
    "name": "SystemData",
    "properties": {
      "createdBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The identity that created the resource."
      },
      "createdByType": {
        "type": {
          "$ref": "#/31"
        },
        "flags": 0,
        "description": "The type of identity that created the resource."
      },
      "createdAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp of resource creation (UTC)."
      },
      "lastModifiedBy": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The identity that last modified the resource."
      },
      "lastModifiedByType": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "The type of identity that last modified the resource."
      },
      "lastModifiedAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The timestamp of resource last modification (UTC)"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/27"
      },
      {
        "$ref": "#/28"
      },
      {
        "$ref": "#/29"
      },
      {
        "$ref": "#/30"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "User"
  },
  {
    "$type": "StringLiteralType",
    "value": "Application"
  },
  {
    "$type": "StringLiteralType",
    "value": "ManagedIdentity"
  },
  {
    "$type": "StringLiteralType",
    "value": "Key"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/32"
      },
      {
        "$ref": "#/33"
      },
      {
        "$ref": "#/34"
      },
      {
        "$ref": "#/35"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.EventHub/clusters@2025-05-01-preview",
    "body": {
      "$ref": "#/4"
    },
    "readableScopes": 8,
    "writableScopes": 8
  },
  {
    "$type": "StringType",
    "minLength": 6,
    "maxLength": 50,
    "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.EventHub/namespaces"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.EventHub/namespaces",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/38"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/42"
        },
        "flags": 0,
        "description": "Namespace properties supplied for create namespace operation."
      },
      "tags": {
        "type": {
          "$ref": "#/82"
        },
        "flags": 0,
        "description": "Resource tags."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The geo-location where the resource lives"
      },
      "sku": {
        "type": {
          "$ref": "#/83"
        },
        "flags": 0,
        "description": "Properties of sku resource"
      },
      "identity": {
        "type": {
          "$ref": "#/92"
        },
        "flags": 0,
        "description": "Properties of BYOK Identity description"
      },
      "systemData": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "EHNamespaceProperties",
    "properties": {
      "minimumTlsVersion": {
        "type": {
          "$ref": "#/47"
        },
        "flags": 0,
        "description": "The minimum TLS version for the cluster to support, e.g. '1.2'"
      },
      "provisioningState": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Provisioning state of the Namespace."
      },
      "status": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Status of the Namespace."
      },
      "createdAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The time the Namespace was created."
      },
      "updatedAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The time the Namespace was updated."
      },
      "serviceBusEndpoint": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Endpoint you can use to perform Service Bus operations."
      },
      "clusterArmId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Cluster ARM ID of the Namespace."
      },
      "metricId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Identifier for Azure Insights metrics."
      },
      "isAutoInflateEnabled": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "Value that indicates whether AutoInflate is enabled for eventhub namespace."
      },
      "publicNetworkAccess": {
        "type": {
          "$ref": "#/51"
        },
        "flags": 0,
        "description": "This determines if traffic is allowed over public network. By default it is enabled."
      },
      "maximumThroughputUnits": {
        "type": {
          "$ref": "#/52"
        },
        "flags": 0,
        "description": "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)"
      },
      "kafkaEnabled": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "Value that indicates whether Kafka is enabled for eventhub namespace."
      },
      "zoneRedundant": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
      },
      "encryption": {
        "type": {
          "$ref": "#/53"
        },
        "flags": 0,
        "description": "Properties of BYOK Encryption description"
      },
      "privateEndpointConnections": {
        "type": {
          "$ref": "#/74"
        },
        "flags": 0,
        "description": "List of private endpoint connections."
      },
      "disableLocalAuth": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "This property disables SAS authentication for the Event Hubs namespace."
      },
      "alternateName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Alternate name specified when alias and namespace names are same."
      },
      "platformCapabilities": {
        "type": {
          "$ref": "#/16"
        },
        "flags": 0
      },
      "geoDataReplication": {
        "type": {
          "$ref": "#/75"
        },
        "flags": 0,
        "description": "Geo Data Replication settings for the namespace"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "1.0"
  },
  {
    "$type": "StringLiteralType",
    "value": "1.1"
  },
  {
    "$type": "StringLiteralType",
    "value": "1.2"
  },
  {
    "$type": "StringLiteralType",
    "value": "1.3"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/43"
      },
      {
        "$ref": "#/44"
      },
      {
        "$ref": "#/45"
      },
      {
        "$ref": "#/46"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "SecuredByPerimeter"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/48"
      },
      {
        "$ref": "#/49"
      },
      {
        "$ref": "#/50"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "IntegerType",
    "minValue": 0
  },
  {
    "$type": "ObjectType",
    "name": "Encryption",
    "properties": {
      "keyVaultProperties": {
        "type": {
          "$ref": "#/56"
        },
        "flags": 0,
        "description": "Properties of KeyVault"
      },
      "keySource": {
        "type": {
          "$ref": "#/57"
        },
        "flags": 0,
        "description": "Enumerates the possible value of keySource for Encryption"
      },
      "requireInfrastructureEncryption": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "Enable Infrastructure Encryption (Double Encryption)"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "KeyVaultProperties",
    "properties": {
      "keyName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the Key from KeyVault"
      },
      "keyVaultUri": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Uri of KeyVault"
      },
      "keyVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Key Version"
      },
      "identity": {
        "type": {
          "$ref": "#/55"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "UserAssignedIdentityProperties",
    "properties": {
      "userAssignedIdentity": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ARM ID of user Identity selected for encryption"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/54"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.KeyVault"
  },
  {
    "$type": "ObjectType",
    "name": "PrivateEndpointConnection",
    "properties": {
      "properties": {
        "type": {
          "$ref": "#/59"
        },
        "flags": 0,
        "description": "Properties of the PrivateEndpointConnection."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The geo-location where the resource lives"
      },
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The name of the resource"
      },
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
      },
      "systemData": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrivateEndpointConnectionProperties",
    "properties": {
      "privateEndpoint": {
        "type": {
          "$ref": "#/60"
        },
        "flags": 0,
        "description": "The Private Endpoint resource for this Connection."
      },
      "privateLinkServiceConnectionState": {
        "type": {
          "$ref": "#/61"
        },
        "flags": 0,
        "description": "Details about the state of the connection."
      },
      "provisioningState": {
        "type": {
          "$ref": "#/73"
        },
        "flags": 0,
        "description": "Provisioning state of the Private Endpoint Connection."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "PrivateEndpoint",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The ARM identifier for Private Endpoint."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ConnectionState",
    "properties": {
      "status": {
        "type": {
          "$ref": "#/66"
        },
        "flags": 0,
        "description": "Status of the connection."
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Description of the connection state."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Pending"
  },
  {
    "$type": "StringLiteralType",
    "value": "Approved"
  },
  {
    "$type": "StringLiteralType",
    "value": "Rejected"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disconnected"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/62"
      },
      {
        "$ref": "#/63"
      },
      {
        "$ref": "#/64"
      },
      {
        "$ref": "#/65"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/67"
      },
      {
        "$ref": "#/68"
      },
      {
        "$ref": "#/69"
      },
      {
        "$ref": "#/70"
      },
      {
        "$ref": "#/71"
      },
      {
        "$ref": "#/72"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/58"
    }
  },
  {
    "$type": "ObjectType",
    "name": "GeoDataReplicationProperties",
    "properties": {
      "maxReplicationLagDurationInSeconds": {
        "type": {
          "$ref": "#/76"
        },
        "flags": 0,
        "description": "The maximum acceptable lag for data replication operations from the primary replica to a quorum of secondary replicas.  When the lag exceeds the configured amount, operations on the primary replica will be failed. The allowed values are 0 and 5 minutes to 1 day."
      },
      "locations": {
        "type": {
          "$ref": "#/81"
        },
        "flags": 0,
        "description": "A list of regions where replicas of the namespace are maintained."
      }
    }
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "ObjectType",
    "name": "NamespaceReplicaLocation",
    "properties": {
      "locationName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Azure regions where a replica of the namespace is maintained"
      },
      "roleType": {
        "type": {
          "$ref": "#/80"
        },
        "flags": 0,
        "description": "GeoDR Role Types"
      },
      "replicaState": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "state of Namespace replica."
      },
      "clusterArmId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Optional property that denotes the ARM ID of the Cluster. This is required, if a namespace replica should be placed in a Dedicated Event Hub Cluster"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Primary"
  },
  {
    "$type": "StringLiteralType",
    "value": "Secondary"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/78"
      },
      {
        "$ref": "#/79"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/77"
    }
  },
  {
    "$type": "ObjectType",
    "name": "EHNamespaceTags",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "Sku",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/87"
        },
        "flags": 1,
        "description": "Name of this SKU."
      },
      "tier": {
        "type": {
          "$ref": "#/91"
        },
        "flags": 0,
        "description": "The billing tier of this particular SKU."
      },
      "capacity": {
        "type": {
          "$ref": "#/52"
        },
        "flags": 0,
        "description": "The Event Hubs throughput units for Basic or Standard tiers, where value should be 0 to 20 throughput units. The Event Hubs premium units for Premium tier, where value should be 0 to 10 premium units."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Basic"
  },
  {
    "$type": "StringLiteralType",
    "value": "Standard"
  },
  {
    "$type": "StringLiteralType",
    "value": "Premium"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/84"
      },
      {
        "$ref": "#/85"
      },
      {
        "$ref": "#/86"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Basic"
  },
  {
    "$type": "StringLiteralType",
    "value": "Standard"
  },
  {
    "$type": "StringLiteralType",
    "value": "Premium"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/88"
      },
      {
        "$ref": "#/89"
      },
      {
        "$ref": "#/90"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Identity",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "ObjectId from the KeyVault"
      },
      "tenantId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "TenantId from the KeyVault"
      },
      "type": {
        "type": {
          "$ref": "#/97"
        },
        "flags": 0,
        "description": "Type of managed service identity."
      },
      "userAssignedIdentities": {
        "type": {
          "$ref": "#/99"
        },
        "flags": 0,
        "description": "Properties for User Assigned Identities"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "UserAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned, UserAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/93"
      },
      {
        "$ref": "#/94"
      },
      {
        "$ref": "#/95"
      },
      {
        "$ref": "#/96"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "UserAssignedIdentity",
    "properties": {
      "principalId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Principal Id of user assigned identity"
      },
      "clientId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Client Id of user assigned identity"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IdentityUserAssignedIdentities",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/98"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.EventHub/namespaces@2025-05-01-preview",
    "body": {
      "$ref": "#/41"
    },
    "readableScopes": 8,
    "writableScopes": 8
  },
  {
    "$type": "StringType",
    "minLength": 1
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.EventHub/namespaces/authorizationRules"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.EventHub/namespaces/authorizationRules",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/101"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/102"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/103"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/105"
        },
        "flags": 0,
        "description": "Properties supplied to create or update AuthorizationRule"
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "AuthorizationRuleProperties",
    "properties": {
      "rights": {
        "type": {
          "$ref": "#/110"
        },
        "flags": 1,
        "description": "The rights associated with the rule."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Manage"
  },
  {
    "$type": "StringLiteralType",
    "value": "Send"
  },
  {
    "$type": "StringLiteralType",
    "value": "Listen"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/106"
      },
      {
        "$ref": "#/107"
      },
      {
        "$ref": "#/108"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/109"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.EventHub/namespaces/authorizationRules@2025-05-01-preview",
    "body": {
      "$ref": "#/104"
    },
    "readableScopes": 8,
    "writableScopes": 8
  },
  {
    "$type": "StringLiteralType",
    "value": "default"
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.EventHub/namespaces/networkRuleSets"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.EventHub/namespaces/networkRuleSets",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/112"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/113"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/114"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/116"
        },
        "flags": 0,
        "description": "NetworkRuleSet properties"
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NetworkRuleSetProperties",
    "properties": {
      "trustedServiceAccessEnabled": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "Value that indicates whether Trusted Service Access is Enabled or not."
      },
      "defaultAction": {
        "type": {
          "$ref": "#/119"
        },
        "flags": 0,
        "description": "Default Action for Network Rule Set"
      },
      "virtualNetworkRules": {
        "type": {
          "$ref": "#/122"
        },
        "flags": 0,
        "description": "List VirtualNetwork Rules"
      },
      "ipRules": {
        "type": {
          "$ref": "#/126"
        },
        "flags": 0,
        "description": "List of IpRules"
      },
      "publicNetworkAccess": {
        "type": {
          "$ref": "#/130"
        },
        "flags": 0,
        "description": "This determines if traffic is allowed over public network. By default it is enabled. If value is SecuredByPerimeter then Inbound and Outbound communication is controlled by the network security perimeter and profile's access rules."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Allow"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deny"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/117"
      },
      {
        "$ref": "#/118"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "NWRuleSetVirtualNetworkRules",
    "properties": {
      "subnet": {
        "type": {
          "$ref": "#/121"
        },
        "flags": 0,
        "description": "Subnet properties"
      },
      "ignoreMissingVnetServiceEndpoint": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "Value that indicates whether to ignore missing Vnet Service Endpoint"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "Subnet",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Resource ID of Virtual Network Subnet"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/120"
    }
  },
  {
    "$type": "ObjectType",
    "name": "NWRuleSetIpRules",
    "properties": {
      "ipMask": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "IP Mask"
      },
      "action": {
        "type": {
          "$ref": "#/125"
        },
        "flags": 0,
        "description": "The IP Filter Action"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Allow"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/124"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/123"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Enabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "SecuredByPerimeter"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/127"
      },
      {
        "$ref": "#/128"
      },
      {
        "$ref": "#/129"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.EventHub/namespaces/networkRuleSets@2025-05-01-preview",
    "body": {
      "$ref": "#/115"
    },
    "readableScopes": 8,
    "writableScopes": 8
  },
  {
    "$type": "StringType",
    "minLength": 1,
    "maxLength": 256
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.EventHub/namespaces/applicationGroups"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.EventHub/namespaces/applicationGroups",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/132"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/133"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/134"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/136"
        },
        "flags": 0
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ApplicationGroupProperties",
    "properties": {
      "isEnabled": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "Determines if Application Group is allowed to create connection with namespace or not. Once the isEnabled is set to false, all the existing connections of application group gets dropped and no new connections will be allowed"
      },
      "clientAppGroupIdentifier": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The Unique identifier for application group.Supports SAS(SASKeyName=KeyName) or AAD(AADAppID=Guid)"
      },
      "policies": {
        "type": {
          "$ref": "#/145"
        },
        "flags": 0,
        "description": "List of group policies that define the behavior of application group. The policies can support resource governance scenarios such as limiting ingress or egress traffic."
      }
    }
  },
  {
    "$type": "DiscriminatedObjectType",
    "name": "ApplicationGroupPolicy",
    "discriminator": "type",
    "baseProperties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "The Name of this policy"
      }
    },
    "elements": {
      "ThrottlingPolicy": {
        "$ref": "#/138"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ThrottlingPolicy",
    "properties": {
      "rateLimitThreshold": {
        "type": {
          "$ref": "#/76"
        },
        "flags": 1,
        "description": "The Threshold limit above which the application group will be throttled.Rate limit is always per second."
      },
      "metricId": {
        "type": {
          "$ref": "#/143"
        },
        "flags": 1,
        "description": "Metric Id on which the throttle limit should be set, MetricId can be discovered by hovering over Metric in the Metrics section of Event Hub Namespace inside Azure Portal"
      },
      "type": {
        "type": {
          "$ref": "#/144"
        },
        "flags": 1,
        "description": "Application Group Policy types"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "IncomingBytes"
  },
  {
    "$type": "StringLiteralType",
    "value": "OutgoingBytes"
  },
  {
    "$type": "StringLiteralType",
    "value": "IncomingMessages"
  },
  {
    "$type": "StringLiteralType",
    "value": "OutgoingMessages"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/139"
      },
      {
        "$ref": "#/140"
      },
      {
        "$ref": "#/141"
      },
      {
        "$ref": "#/142"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "ThrottlingPolicy"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/137"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.EventHub/namespaces/applicationGroups@2025-05-01-preview",
    "body": {
      "$ref": "#/135"
    },
    "readableScopes": 8,
    "writableScopes": 8
  },
  {
    "$type": "StringType",
    "minLength": 1,
    "maxLength": 50
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.EventHub/namespaces/disasterRecoveryConfigs"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.EventHub/namespaces/disasterRecoveryConfigs",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/147"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/148"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/149"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/151"
        },
        "flags": 0,
        "description": "Properties required to the Create Or Update Alias(Disaster Recovery configurations)"
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ArmDisasterRecoveryProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/155"
        },
        "flags": 2,
        "description": "Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'"
      },
      "partnerNamespace": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
      },
      "alternateName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Alternate name specified when alias and namespace names are same."
      },
      "role": {
        "type": {
          "$ref": "#/159"
        },
        "flags": 2,
        "description": "role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'"
      },
      "pendingReplicationOperationsCount": {
        "type": {
          "$ref": "#/76"
        },
        "flags": 2,
        "description": "Number of entities pending to be replicated."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/152"
      },
      {
        "$ref": "#/153"
      },
      {
        "$ref": "#/154"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Primary"
  },
  {
    "$type": "StringLiteralType",
    "value": "PrimaryNotReplicating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Secondary"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/156"
      },
      {
        "$ref": "#/157"
      },
      {
        "$ref": "#/158"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.EventHub/namespaces/disasterRecoveryConfigs@2025-05-01-preview",
    "body": {
      "$ref": "#/150"
    },
    "readableScopes": 8,
    "writableScopes": 8
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.EventHub/namespaces/eventhubs"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.EventHub/namespaces/eventhubs",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/132"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/161"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/162"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/164"
        },
        "flags": 0,
        "description": "Properties supplied to the Create Or Update Event Hub operation."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "EventhubProperties",
    "properties": {
      "partitionIds": {
        "type": {
          "$ref": "#/165"
        },
        "flags": 2,
        "description": "Current number of shards on the Event Hub."
      },
      "createdAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Exact time the Event Hub was created."
      },
      "updatedAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The exact time the message was updated."
      },
      "messageRetentionInDays": {
        "type": {
          "$ref": "#/25"
        },
        "flags": 0,
        "description": "Number of days to retain the events for this Event Hub, value should be 1 to 7 days"
      },
      "partitionCount": {
        "type": {
          "$ref": "#/25"
        },
        "flags": 0,
        "description": "Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions."
      },
      "status": {
        "type": {
          "$ref": "#/175"
        },
        "flags": 0,
        "description": "Enumerates the possible values for the status of the Event Hub."
      },
      "captureDescription": {
        "type": {
          "$ref": "#/176"
        },
        "flags": 0,
        "description": "Properties of capture description"
      },
      "retentionDescription": {
        "type": {
          "$ref": "#/187"
        },
        "flags": 0,
        "description": "Event Hub retention settings"
      },
      "messageTimestampDescription": {
        "type": {
          "$ref": "#/192"
        },
        "flags": 0,
        "description": "Properties of MessageTimestamp Description"
      },
      "identifier": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Denotes the unique identifier for event hub and is generated by service while creating topic. This identifier can be used in kafka runtime apis wherever a UUID is required e.g Fetch & Delete Topic. This identifier is not supported in AMQP runtime operations yet."
      },
      "userMetadata": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Gets and Sets Metadata of User."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Active"
  },
  {
    "$type": "StringLiteralType",
    "value": "Disabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Restoring"
  },
  {
    "$type": "StringLiteralType",
    "value": "SendDisabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "ReceiveDisabled"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Renaming"
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/166"
      },
      {
        "$ref": "#/167"
      },
      {
        "$ref": "#/168"
      },
      {
        "$ref": "#/169"
      },
      {
        "$ref": "#/170"
      },
      {
        "$ref": "#/171"
      },
      {
        "$ref": "#/172"
      },
      {
        "$ref": "#/173"
      },
      {
        "$ref": "#/174"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "CaptureDescription",
    "properties": {
      "enabled": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "A value that indicates whether capture description is enabled."
      },
      "encoding": {
        "type": {
          "$ref": "#/179"
        },
        "flags": 0,
        "description": "Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version"
      },
      "intervalInSeconds": {
        "type": {
          "$ref": "#/76"
        },
        "flags": 0,
        "description": "The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds"
      },
      "sizeLimitInBytes": {
        "type": {
          "$ref": "#/76"
        },
        "flags": 0,
        "description": "The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes"
      },
      "destination": {
        "type": {
          "$ref": "#/180"
        },
        "flags": 0,
        "description": "Properties of Destination where capture will be stored. (Storage Account, Blob Names)"
      },
      "skipEmptyArchives": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 0,
        "description": "A value that indicates whether to Skip Empty Archives"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Avro"
  },
  {
    "$type": "StringLiteralType",
    "value": "AvroDeflate"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/177"
      },
      {
        "$ref": "#/178"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "Destination",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name for capture destination"
      },
      "identity": {
        "type": {
          "$ref": "#/181"
        },
        "flags": 0,
        "description": "A value that indicates whether capture description is enabled."
      },
      "properties": {
        "type": {
          "$ref": "#/185"
        },
        "flags": 0,
        "description": "Properties describing the storage account, blob container and archive name format for capture destination"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "CaptureIdentity",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/184"
        },
        "flags": 0,
        "description": "Type of Azure Active Directory Managed Identity."
      },
      "userAssignedIdentity": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "ARM ID of Managed User Identity. This property is required is the type is UserAssignedIdentity. If type is SystemAssigned, then the System Assigned Identity Associated with the namespace will be used."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "SystemAssigned"
  },
  {
    "$type": "StringLiteralType",
    "value": "UserAssigned"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/182"
      },
      {
        "$ref": "#/183"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "DestinationProperties",
    "properties": {
      "storageAccountResourceId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Resource id of the storage account to be used to create the blobs"
      },
      "blobContainer": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Blob container Name"
      },
      "archiveNameFormat": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order"
      },
      "dataLakeSubscriptionId": {
        "type": {
          "$ref": "#/186"
        },
        "flags": 0,
        "description": "Subscription Id of Azure Data Lake Store"
      },
      "dataLakeAccountName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The Azure Data Lake Store name for the captured events"
      },
      "dataLakeFolderPath": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "The destination folder path for the captured events"
      }
    }
  },
  {
    "$type": "StringType",
    "minLength": 36,
    "maxLength": 36,
    "pattern": "^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$"
  },
  {
    "$type": "ObjectType",
    "name": "RetentionDescription",
    "properties": {
      "cleanupPolicy": {
        "type": {
          "$ref": "#/191"
        },
        "flags": 0,
        "description": "Enumerates the possible values for cleanup policy"
      },
      "retentionTimeInHours": {
        "type": {
          "$ref": "#/76"
        },
        "flags": 0,
        "description": "Number of hours to retain the events for this Event Hub. This should be positive value upto namespace SKU max. -1 is a special case where retention time is infinite, but the size of an entity is restricted and its size depends on namespace SKU type."
      },
      "minCompactionLagTimeInMinutes": {
        "type": {
          "$ref": "#/76"
        },
        "flags": 0,
        "description": "The minimum time a message will remain ineligible for compaction in the log. This value is used when cleanupPolicy is Compact or DeleteOrCompact."
      },
      "tombstoneRetentionTimeInHours": {
        "type": {
          "$ref": "#/76"
        },
        "flags": 0,
        "description": "Number of hours to retain the tombstone markers of a compacted Event Hub. This value is used when cleanupPolicy is Compact or DeleteOrCompact. Consumer must complete reading the tombstone marker within this specified amount of time if consumer begins from starting offset to ensure they get a valid snapshot for the specific key described by the tombstone marker within the compacted Event Hub"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Delete"
  },
  {
    "$type": "StringLiteralType",
    "value": "Compact"
  },
  {
    "$type": "StringLiteralType",
    "value": "DeleteOrCompact"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/188"
      },
      {
        "$ref": "#/189"
      },
      {
        "$ref": "#/190"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "MessageTimestampDescription",
    "properties": {
      "timestampType": {
        "type": {
          "$ref": "#/195"
        },
        "flags": 0,
        "description": "Denotes the type of timestamp the message will hold.Two types of timestamp types - \"AppendTime\" and \"CreateTime\". AppendTime refers the time in which message got appended inside broker log. CreateTime refers to the time in which the message was generated on source side and producers can set this timestamp while sending the message. Default value is AppendTime. If you are using AMQP protocol, CreateTime equals AppendTime and its behavior remains the same."
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "LogAppend"
  },
  {
    "$type": "StringLiteralType",
    "value": "Create"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/193"
      },
      {
        "$ref": "#/194"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.EventHub/namespaces/eventhubs@2025-05-01-preview",
    "body": {
      "$ref": "#/163"
    },
    "readableScopes": 8,
    "writableScopes": 8
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/101"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/197"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/198"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/105"
        },
        "flags": 0,
        "description": "Properties supplied to create or update AuthorizationRule"
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules@2025-05-01-preview",
    "body": {
      "$ref": "#/199"
    },
    "readableScopes": 8,
    "writableScopes": 8
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.EventHub/namespaces/eventhubs/consumergroups"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/147"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/201"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/202"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/204"
        },
        "flags": 0,
        "description": "Single item in List or Get Consumer group operation"
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ConsumerGroupProperties",
    "properties": {
      "createdAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Exact time the message was created."
      },
      "updatedAt": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The exact time the message was updated."
      },
      "userMetadata": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.EventHub/namespaces/eventhubs/consumergroups@2025-05-01-preview",
    "body": {
      "$ref": "#/203"
    },
    "readableScopes": 8,
    "writableScopes": 8
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.EventHub/namespaces/privateEndpointConnections"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.EventHub/namespaces/privateEndpointConnections",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/206"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/207"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/59"
        },
        "flags": 0,
        "description": "Properties of the PrivateEndpointConnection."
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.EventHub/namespaces/privateEndpointConnections@2025-05-01-preview",
    "body": {
      "$ref": "#/208"
    },
    "readableScopes": 8,
    "writableScopes": 8
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.EventHub/namespaces/schemagroups"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.EventHub/namespaces/schemagroups",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/132"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/210"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/211"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/213"
        },
        "flags": 0
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SchemaGroupProperties",
    "properties": {
      "updatedAtUtc": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Exact time the Schema Group was updated"
      },
      "createdAtUtc": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Exact time the Schema Group was created."
      },
      "eTag": {
        "type": {
          "$ref": "#/186"
        },
        "flags": 2,
        "description": "The ETag value."
      },
      "groupProperties": {
        "type": {
          "$ref": "#/214"
        },
        "flags": 0,
        "description": "dictionary object for SchemaGroup group properties"
      },
      "schemaCompatibility": {
        "type": {
          "$ref": "#/218"
        },
        "flags": 0
      },
      "schemaType": {
        "type": {
          "$ref": "#/223"
        },
        "flags": 0
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "SchemaGroupProperties",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "None"
  },
  {
    "$type": "StringLiteralType",
    "value": "Backward"
  },
  {
    "$type": "StringLiteralType",
    "value": "Forward"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/215"
      },
      {
        "$ref": "#/216"
      },
      {
        "$ref": "#/217"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "Avro"
  },
  {
    "$type": "StringLiteralType",
    "value": "ProtoBuf"
  },
  {
    "$type": "StringLiteralType",
    "value": "Json"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/219"
      },
      {
        "$ref": "#/220"
      },
      {
        "$ref": "#/221"
      },
      {
        "$ref": "#/222"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.EventHub/namespaces/schemagroups@2025-05-01-preview",
    "body": {
      "$ref": "#/212"
    },
    "readableScopes": 8,
    "writableScopes": 8
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.EventHub/namespaces/disasterRecoveryConfigs/authorizationRules"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.EventHub/namespaces/disasterRecoveryConfigs/authorizationRules",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/101"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/225"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/226"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/105"
        },
        "flags": 2,
        "description": "Properties supplied to create or update AuthorizationRule"
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.EventHub/namespaces/disasterRecoveryConfigs/authorizationRules@2025-05-01-preview",
    "body": {
      "$ref": "#/227"
    },
    "readableScopes": 8,
    "writableScopes": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "Microsoft.EventHub/namespaces/networkSecurityPerimeterConfigurations"
  },
  {
    "$type": "StringLiteralType",
    "value": "2025-05-01-preview"
  },
  {
    "$type": "ObjectType",
    "name": "Microsoft.EventHub/namespaces/networkSecurityPerimeterConfigurations",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 10,
        "description": "The resource id"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 9,
        "description": "The resource name"
      },
      "type": {
        "type": {
          "$ref": "#/229"
        },
        "flags": 10,
        "description": "The resource type"
      },
      "apiVersion": {
        "type": {
          "$ref": "#/230"
        },
        "flags": 10,
        "description": "The resource api version"
      },
      "properties": {
        "type": {
          "$ref": "#/232"
        },
        "flags": 2,
        "description": "Properties of the Network Security Perimeter Configuration"
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "The geo-location where the resource lives"
      },
      "systemData": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 2,
        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NetworkSecurityPerimeterConfigurationProperties",
    "properties": {
      "provisioningState": {
        "type": {
          "$ref": "#/244"
        },
        "flags": 0,
        "description": "Provisioning state of NetworkSecurityPerimeter configuration propagation"
      },
      "provisioningIssues": {
        "type": {
          "$ref": "#/247"
        },
        "flags": 2,
        "description": "List of Provisioning Issues if any"
      },
      "networkSecurityPerimeter": {
        "type": {
          "$ref": "#/248"
        },
        "flags": 2,
        "description": "NetworkSecurityPerimeter related information"
      },
      "resourceAssociation": {
        "type": {
          "$ref": "#/249"
        },
        "flags": 2,
        "description": "Information about resource association"
      },
      "profile": {
        "type": {
          "$ref": "#/256"
        },
        "flags": 2,
        "description": "Information about current network profile"
      },
      "isBackingResource": {
        "type": {
          "$ref": "#/15"
        },
        "flags": 2,
        "description": "True if the EventHub namespace is backed by another Azure resource and not visible to end users."
      },
      "applicableFeatures": {
        "type": {
          "$ref": "#/268"
        },
        "flags": 2,
        "description": "Indicates that the NSP controls related to backing association are only applicable to a specific feature in backing resource's data plane."
      },
      "parentAssociationName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Source Resource Association name"
      },
      "sourceResourceId": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "ARM Id of source resource"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Unknown"
  },
  {
    "$type": "StringLiteralType",
    "value": "Creating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Updating"
  },
  {
    "$type": "StringLiteralType",
    "value": "Accepted"
  },
  {
    "$type": "StringLiteralType",
    "value": "InvalidResponse"
  },
  {
    "$type": "StringLiteralType",
    "value": "Succeeded"
  },
  {
    "$type": "StringLiteralType",
    "value": "SucceededWithIssues"
  },
  {
    "$type": "StringLiteralType",
    "value": "Failed"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleting"
  },
  {
    "$type": "StringLiteralType",
    "value": "Deleted"
  },
  {
    "$type": "StringLiteralType",
    "value": "Canceled"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/233"
      },
      {
        "$ref": "#/234"
      },
      {
        "$ref": "#/235"
      },
      {
        "$ref": "#/236"
      },
      {
        "$ref": "#/237"
      },
      {
        "$ref": "#/238"
      },
      {
        "$ref": "#/239"
      },
      {
        "$ref": "#/240"
      },
      {
        "$ref": "#/241"
      },
      {
        "$ref": "#/242"
      },
      {
        "$ref": "#/243"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "ProvisioningIssue",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the issue"
      },
      "properties": {
        "type": {
          "$ref": "#/246"
        },
        "flags": 2,
        "description": "Properties of Provisioning Issue"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "ProvisioningIssueProperties",
    "properties": {
      "issueType": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Type of Issue"
      },
      "description": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Description of the issue"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/245"
    }
  },
  {
    "$type": "ObjectType",
    "name": "NetworkSecurityPerimeter",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Fully qualified identifier of the resource"
      },
      "perimeterGuid": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Guid of the resource"
      },
      "location": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Location of the resource"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the resource association"
      },
      "accessMode": {
        "type": {
          "$ref": "#/255"
        },
        "flags": 0,
        "description": "Access Mode of the resource association"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "NoAssociationMode"
  },
  {
    "$type": "StringLiteralType",
    "value": "EnforcedMode"
  },
  {
    "$type": "StringLiteralType",
    "value": "LearningMode"
  },
  {
    "$type": "StringLiteralType",
    "value": "AuditMode"
  },
  {
    "$type": "StringLiteralType",
    "value": "UnspecifiedMode"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/250"
      },
      {
        "$ref": "#/251"
      },
      {
        "$ref": "#/252"
      },
      {
        "$ref": "#/253"
      },
      {
        "$ref": "#/254"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ObjectType",
    "name": "NetworkSecurityPerimeterConfigurationPropertiesProfile",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the resource"
      },
      "accessRulesVersion": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Current access rules version"
      },
      "accessRules": {
        "type": {
          "$ref": "#/267"
        },
        "flags": 0,
        "description": "List of Access Rules"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NspAccessRule",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Fully qualified identifier of the resource"
      },
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Name of the resource"
      },
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Type of the resource"
      },
      "properties": {
        "type": {
          "$ref": "#/258"
        },
        "flags": 2,
        "description": "Properties of Access Rule"
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "NspAccessRuleProperties",
    "properties": {
      "direction": {
        "type": {
          "$ref": "#/261"
        },
        "flags": 0,
        "description": "Direction of Access Rule"
      },
      "addressPrefixes": {
        "type": {
          "$ref": "#/262"
        },
        "flags": 0,
        "description": "Address prefixes in the CIDR format for inbound rules"
      },
      "subscriptions": {
        "type": {
          "$ref": "#/264"
        },
        "flags": 0,
        "description": "Subscriptions for inbound rules"
      },
      "networkSecurityPerimeters": {
        "type": {
          "$ref": "#/265"
        },
        "flags": 2,
        "description": "NetworkSecurityPerimeters for inbound rules"
      },
      "fullyQualifiedDomainNames": {
        "type": {
          "$ref": "#/266"
        },
        "flags": 2,
        "description": "FQDN for outbound rules"
      }
    }
  },
  {
    "$type": "StringLiteralType",
    "value": "Inbound"
  },
  {
    "$type": "StringLiteralType",
    "value": "Outbound"
  },
  {
    "$type": "UnionType",
    "elements": [
      {
        "$ref": "#/259"
      },
      {
        "$ref": "#/260"
      },
      {
        "$ref": "#/2"
      }
    ]
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "NspAccessRulePropertiesSubscriptionsItem",
    "properties": {
      "id": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Fully qualified identifier of subscription"
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/263"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/248"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/257"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ResourceType",
    "name": "Microsoft.EventHub/namespaces/networkSecurityPerimeterConfigurations@2025-05-01-preview",
    "body": {
      "$ref": "#/231"
    },
    "readableScopes": 8,
    "writableScopes": 0
  },
  {
    "$type": "ObjectType",
    "name": "AccessKeys",
    "properties": {
      "primaryConnectionString": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Primary connection string of the created namespace AuthorizationRule."
      },
      "secondaryConnectionString": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Secondary connection string of the created namespace AuthorizationRule."
      },
      "aliasPrimaryConnectionString": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Primary connection string of the alias if GEO DR is enabled"
      },
      "aliasSecondaryConnectionString": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "Secondary  connection string of the alias if GEO DR is enabled"
      },
      "primaryKey": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
      },
      "secondaryKey": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
      },
      "keyName": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 2,
        "description": "A string that describes the AuthorizationRule."
      }
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listKeys",
    "resourceType": "Microsoft.EventHub/namespaces/authorizationRules",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/270"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listKeys",
    "resourceType": "Microsoft.EventHub/namespaces/disasterRecoveryConfigs/authorizationRules",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/270"
    }
  },
  {
    "$type": "ResourceFunctionType",
    "name": "listKeys",
    "resourceType": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
    "apiVersion": "2025-05-01-preview",
    "output": {
      "$ref": "#/270"
    }
  }
]